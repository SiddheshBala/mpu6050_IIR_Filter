ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"SEGGER_RTT_printf.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/SEGGER_RTT_printf.c"
  20              		.section	.text._StoreChar,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_StoreChar:
  27              	.LFB0:
   1:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
   2:Core/Src/SEGGER_RTT_printf.c **** *                    SEGGER Microcontroller GmbH                     *
   3:Core/Src/SEGGER_RTT_printf.c **** *                        The Embedded Experts                        *
   4:Core/Src/SEGGER_RTT_printf.c **** **********************************************************************
   5:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
   6:Core/Src/SEGGER_RTT_printf.c **** *            (c) 1995 - 2021 SEGGER Microcontroller GmbH             *
   7:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
   8:Core/Src/SEGGER_RTT_printf.c **** *       www.segger.com     Support: support@segger.com               *
   9:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
  10:Core/Src/SEGGER_RTT_printf.c **** **********************************************************************
  11:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
  12:Core/Src/SEGGER_RTT_printf.c **** *       SEGGER RTT * Real Time Transfer for embedded targets         *
  13:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
  14:Core/Src/SEGGER_RTT_printf.c **** **********************************************************************
  15:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
  16:Core/Src/SEGGER_RTT_printf.c **** * All rights reserved.                                               *
  17:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
  18:Core/Src/SEGGER_RTT_printf.c **** * SEGGER strongly recommends to not make any changes                 *
  19:Core/Src/SEGGER_RTT_printf.c **** * to or modify the source code of this software in order to stay     *
  20:Core/Src/SEGGER_RTT_printf.c **** * compatible with the RTT protocol and J-Link.                       *
  21:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
  22:Core/Src/SEGGER_RTT_printf.c **** * Redistribution and use in source and binary forms, with or         *
  23:Core/Src/SEGGER_RTT_printf.c **** * without modification, are permitted provided that the following    *
  24:Core/Src/SEGGER_RTT_printf.c **** * condition is met:                                                  *
  25:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
  26:Core/Src/SEGGER_RTT_printf.c **** * o Redistributions of source code must retain the above copyright   *
  27:Core/Src/SEGGER_RTT_printf.c **** *   notice, this condition and the following disclaimer.             *
  28:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
  29:Core/Src/SEGGER_RTT_printf.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND             *
  30:Core/Src/SEGGER_RTT_printf.c **** * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,        *
  31:Core/Src/SEGGER_RTT_printf.c **** * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF           *
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 2


  32:Core/Src/SEGGER_RTT_printf.c **** * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE           *
  33:Core/Src/SEGGER_RTT_printf.c **** * DISCLAIMED. IN NO EVENT SHALL SEGGER Microcontroller BE LIABLE FOR *
  34:Core/Src/SEGGER_RTT_printf.c **** * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR           *
  35:Core/Src/SEGGER_RTT_printf.c **** * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT  *
  36:Core/Src/SEGGER_RTT_printf.c **** * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;    *
  37:Core/Src/SEGGER_RTT_printf.c **** * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF      *
  38:Core/Src/SEGGER_RTT_printf.c **** * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT          *
  39:Core/Src/SEGGER_RTT_printf.c **** * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE  *
  40:Core/Src/SEGGER_RTT_printf.c **** * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH   *
  41:Core/Src/SEGGER_RTT_printf.c **** * DAMAGE.                                                            *
  42:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
  43:Core/Src/SEGGER_RTT_printf.c **** **********************************************************************
  44:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
  45:Core/Src/SEGGER_RTT_printf.c **** *       RTT version: 7.96                                           *
  46:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
  47:Core/Src/SEGGER_RTT_printf.c **** **********************************************************************
  48:Core/Src/SEGGER_RTT_printf.c **** 
  49:Core/Src/SEGGER_RTT_printf.c **** ---------------------------END-OF-HEADER------------------------------
  50:Core/Src/SEGGER_RTT_printf.c **** File    : SEGGER_RTT_printf.c
  51:Core/Src/SEGGER_RTT_printf.c **** Purpose : Replacement for printf to write formatted data via RTT
  52:Core/Src/SEGGER_RTT_printf.c **** Revision: $Rev: 17697 $
  53:Core/Src/SEGGER_RTT_printf.c **** ----------------------------------------------------------------------
  54:Core/Src/SEGGER_RTT_printf.c **** */
  55:Core/Src/SEGGER_RTT_printf.c **** #include "SEGGER_RTT.h"
  56:Core/Src/SEGGER_RTT_printf.c **** #include "SEGGER_RTT_Conf.h"
  57:Core/Src/SEGGER_RTT_printf.c **** 
  58:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
  59:Core/Src/SEGGER_RTT_printf.c **** *
  60:Core/Src/SEGGER_RTT_printf.c **** *       Defines, configurable
  61:Core/Src/SEGGER_RTT_printf.c **** *
  62:Core/Src/SEGGER_RTT_printf.c **** **********************************************************************
  63:Core/Src/SEGGER_RTT_printf.c **** */
  64:Core/Src/SEGGER_RTT_printf.c **** 
  65:Core/Src/SEGGER_RTT_printf.c **** #ifndef SEGGER_RTT_PRINTF_BUFFER_SIZE
  66:Core/Src/SEGGER_RTT_printf.c ****   #define SEGGER_RTT_PRINTF_BUFFER_SIZE (64)
  67:Core/Src/SEGGER_RTT_printf.c **** #endif
  68:Core/Src/SEGGER_RTT_printf.c **** 
  69:Core/Src/SEGGER_RTT_printf.c **** #include <stdlib.h>
  70:Core/Src/SEGGER_RTT_printf.c **** #include <stdarg.h>
  71:Core/Src/SEGGER_RTT_printf.c **** 
  72:Core/Src/SEGGER_RTT_printf.c **** 
  73:Core/Src/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_LEFT_JUSTIFY   (1u << 0)
  74:Core/Src/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_PAD_ZERO       (1u << 1)
  75:Core/Src/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_PRINT_SIGN     (1u << 2)
  76:Core/Src/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_ALTERNATE      (1u << 3)
  77:Core/Src/SEGGER_RTT_printf.c **** 
  78:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
  79:Core/Src/SEGGER_RTT_printf.c **** *
  80:Core/Src/SEGGER_RTT_printf.c **** *       Types
  81:Core/Src/SEGGER_RTT_printf.c **** *
  82:Core/Src/SEGGER_RTT_printf.c **** **********************************************************************
  83:Core/Src/SEGGER_RTT_printf.c **** */
  84:Core/Src/SEGGER_RTT_printf.c **** 
  85:Core/Src/SEGGER_RTT_printf.c **** typedef struct {
  86:Core/Src/SEGGER_RTT_printf.c ****   char*     pBuffer;
  87:Core/Src/SEGGER_RTT_printf.c ****   unsigned  BufferSize;
  88:Core/Src/SEGGER_RTT_printf.c ****   unsigned  Cnt;
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 3


  89:Core/Src/SEGGER_RTT_printf.c **** 
  90:Core/Src/SEGGER_RTT_printf.c ****   int   ReturnValue;
  91:Core/Src/SEGGER_RTT_printf.c **** 
  92:Core/Src/SEGGER_RTT_printf.c ****   unsigned RTTBufferIndex;
  93:Core/Src/SEGGER_RTT_printf.c **** } SEGGER_RTT_PRINTF_DESC;
  94:Core/Src/SEGGER_RTT_printf.c **** 
  95:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
  96:Core/Src/SEGGER_RTT_printf.c **** *
  97:Core/Src/SEGGER_RTT_printf.c **** *       Function prototypes
  98:Core/Src/SEGGER_RTT_printf.c **** *
  99:Core/Src/SEGGER_RTT_printf.c **** **********************************************************************
 100:Core/Src/SEGGER_RTT_printf.c **** */
 101:Core/Src/SEGGER_RTT_printf.c **** 
 102:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
 103:Core/Src/SEGGER_RTT_printf.c **** *
 104:Core/Src/SEGGER_RTT_printf.c **** *       Static code
 105:Core/Src/SEGGER_RTT_printf.c **** *
 106:Core/Src/SEGGER_RTT_printf.c **** **********************************************************************
 107:Core/Src/SEGGER_RTT_printf.c **** */
 108:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
 109:Core/Src/SEGGER_RTT_printf.c **** *
 110:Core/Src/SEGGER_RTT_printf.c **** *       _StoreChar
 111:Core/Src/SEGGER_RTT_printf.c **** */
 112:Core/Src/SEGGER_RTT_printf.c **** static void _StoreChar(SEGGER_RTT_PRINTF_DESC * p, char c) {
  28              		.loc 1 112 60
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 84B0     		sub	sp, sp, #16
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
  44 0008 0B46     		mov	r3, r1
  45 000a FB70     		strb	r3, [r7, #3]
 113:Core/Src/SEGGER_RTT_printf.c ****   unsigned Cnt;
 114:Core/Src/SEGGER_RTT_printf.c **** 
 115:Core/Src/SEGGER_RTT_printf.c ****   Cnt = p->Cnt;
  46              		.loc 1 115 7
  47 000c 7B68     		ldr	r3, [r7, #4]
  48 000e 9B68     		ldr	r3, [r3, #8]
  49 0010 FB60     		str	r3, [r7, #12]
 116:Core/Src/SEGGER_RTT_printf.c ****   if ((Cnt + 1u) <= p->BufferSize) {
  50              		.loc 1 116 12
  51 0012 FB68     		ldr	r3, [r7, #12]
  52 0014 5A1C     		adds	r2, r3, #1
  53              		.loc 1 116 22
  54 0016 7B68     		ldr	r3, [r7, #4]
  55 0018 5B68     		ldr	r3, [r3, #4]
  56              		.loc 1 116 6
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 4


  57 001a 9A42     		cmp	r2, r3
  58 001c 0ED8     		bhi	.L2
 117:Core/Src/SEGGER_RTT_printf.c ****     *(p->pBuffer + Cnt) = c;
  59              		.loc 1 117 8
  60 001e 7B68     		ldr	r3, [r7, #4]
  61 0020 1A68     		ldr	r2, [r3]
  62              		.loc 1 117 18
  63 0022 FB68     		ldr	r3, [r7, #12]
  64 0024 1344     		add	r3, r3, r2
  65              		.loc 1 117 25
  66 0026 FA78     		ldrb	r2, [r7, #3]
  67 0028 1A70     		strb	r2, [r3]
 118:Core/Src/SEGGER_RTT_printf.c ****     p->Cnt = Cnt + 1u;
  68              		.loc 1 118 18
  69 002a FB68     		ldr	r3, [r7, #12]
  70 002c 5A1C     		adds	r2, r3, #1
  71              		.loc 1 118 12
  72 002e 7B68     		ldr	r3, [r7, #4]
  73 0030 9A60     		str	r2, [r3, #8]
 119:Core/Src/SEGGER_RTT_printf.c ****     p->ReturnValue++;
  74              		.loc 1 119 6
  75 0032 7B68     		ldr	r3, [r7, #4]
  76 0034 DB68     		ldr	r3, [r3, #12]
  77              		.loc 1 119 19
  78 0036 5A1C     		adds	r2, r3, #1
  79 0038 7B68     		ldr	r3, [r7, #4]
  80 003a DA60     		str	r2, [r3, #12]
  81              	.L2:
 120:Core/Src/SEGGER_RTT_printf.c ****   }
 121:Core/Src/SEGGER_RTT_printf.c ****   //
 122:Core/Src/SEGGER_RTT_printf.c ****   // Write part of string, when the buffer is full
 123:Core/Src/SEGGER_RTT_printf.c ****   //
 124:Core/Src/SEGGER_RTT_printf.c ****   if (p->Cnt == p->BufferSize) {
  82              		.loc 1 124 8
  83 003c 7B68     		ldr	r3, [r7, #4]
  84 003e 9A68     		ldr	r2, [r3, #8]
  85              		.loc 1 124 18
  86 0040 7B68     		ldr	r3, [r7, #4]
  87 0042 5B68     		ldr	r3, [r3, #4]
  88              		.loc 1 124 6
  89 0044 9A42     		cmp	r2, r3
  90 0046 15D1     		bne	.L5
 125:Core/Src/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  91              		.loc 1 125 9
  92 0048 7B68     		ldr	r3, [r7, #4]
  93 004a 1869     		ldr	r0, [r3, #16]
  94              		.loc 1 125 46
  95 004c 7B68     		ldr	r3, [r7, #4]
  96 004e 1968     		ldr	r1, [r3]
  97              		.loc 1 125 9
  98 0050 7B68     		ldr	r3, [r7, #4]
  99 0052 9B68     		ldr	r3, [r3, #8]
 100 0054 1A46     		mov	r2, r3
 101 0056 FFF7FEFF 		bl	SEGGER_RTT_Write
 102 005a 0246     		mov	r2, r0
 103              		.loc 1 125 69 discriminator 1
 104 005c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 5


 105 005e 9B68     		ldr	r3, [r3, #8]
 106              		.loc 1 125 8 discriminator 1
 107 0060 9A42     		cmp	r2, r3
 108 0062 04D0     		beq	.L4
 126:Core/Src/SEGGER_RTT_printf.c ****       p->ReturnValue = -1;
 109              		.loc 1 126 22
 110 0064 7B68     		ldr	r3, [r7, #4]
 111 0066 4FF0FF32 		mov	r2, #-1
 112 006a DA60     		str	r2, [r3, #12]
 127:Core/Src/SEGGER_RTT_printf.c ****     } else {
 128:Core/Src/SEGGER_RTT_printf.c ****       p->Cnt = 0u;
 129:Core/Src/SEGGER_RTT_printf.c ****     }
 130:Core/Src/SEGGER_RTT_printf.c ****   }
 131:Core/Src/SEGGER_RTT_printf.c **** }
 113              		.loc 1 131 1
 114 006c 02E0     		b	.L5
 115              	.L4:
 128:Core/Src/SEGGER_RTT_printf.c ****     }
 116              		.loc 1 128 14
 117 006e 7B68     		ldr	r3, [r7, #4]
 118 0070 0022     		movs	r2, #0
 119 0072 9A60     		str	r2, [r3, #8]
 120              	.L5:
 121              		.loc 1 131 1
 122 0074 00BF     		nop
 123 0076 1037     		adds	r7, r7, #16
 124              	.LCFI3:
 125              		.cfi_def_cfa_offset 8
 126 0078 BD46     		mov	sp, r7
 127              	.LCFI4:
 128              		.cfi_def_cfa_register 13
 129              		@ sp needed
 130 007a 80BD     		pop	{r7, pc}
 131              		.cfi_endproc
 132              	.LFE0:
 134              		.section	.text._PrintUnsigned,"ax",%progbits
 135              		.align	1
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 140              	_PrintUnsigned:
 141              	.LFB1:
 132:Core/Src/SEGGER_RTT_printf.c **** 
 133:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
 134:Core/Src/SEGGER_RTT_printf.c **** *
 135:Core/Src/SEGGER_RTT_printf.c **** *       _PrintUnsigned
 136:Core/Src/SEGGER_RTT_printf.c **** */
 137:Core/Src/SEGGER_RTT_printf.c **** static void _PrintUnsigned(SEGGER_RTT_PRINTF_DESC * pBufferDesc, unsigned v, unsigned Base, unsigne
 142              		.loc 1 137 156
 143              		.cfi_startproc
 144              		@ args = 8, pretend = 0, frame = 40
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146 0000 80B5     		push	{r7, lr}
 147              	.LCFI5:
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 7, -8
 150              		.cfi_offset 14, -4
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 6


 151 0002 8AB0     		sub	sp, sp, #40
 152              	.LCFI6:
 153              		.cfi_def_cfa_offset 48
 154 0004 00AF     		add	r7, sp, #0
 155              	.LCFI7:
 156              		.cfi_def_cfa_register 7
 157 0006 F860     		str	r0, [r7, #12]
 158 0008 B960     		str	r1, [r7, #8]
 159 000a 7A60     		str	r2, [r7, #4]
 160 000c 3B60     		str	r3, [r7]
 138:Core/Src/SEGGER_RTT_printf.c ****   static const char _aV2C[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', '
 139:Core/Src/SEGGER_RTT_printf.c ****   unsigned Div;
 140:Core/Src/SEGGER_RTT_printf.c ****   unsigned Digit;
 141:Core/Src/SEGGER_RTT_printf.c ****   unsigned Number;
 142:Core/Src/SEGGER_RTT_printf.c ****   unsigned Width;
 143:Core/Src/SEGGER_RTT_printf.c ****   char c;
 144:Core/Src/SEGGER_RTT_printf.c **** 
 145:Core/Src/SEGGER_RTT_printf.c ****   Number = v;
 161              		.loc 1 145 10
 162 000e BB68     		ldr	r3, [r7, #8]
 163 0010 3B62     		str	r3, [r7, #32]
 146:Core/Src/SEGGER_RTT_printf.c ****   Digit = 1u;
 164              		.loc 1 146 9
 165 0012 0123     		movs	r3, #1
 166 0014 7B62     		str	r3, [r7, #36]
 147:Core/Src/SEGGER_RTT_printf.c ****   //
 148:Core/Src/SEGGER_RTT_printf.c ****   // Get actual field width
 149:Core/Src/SEGGER_RTT_printf.c ****   //
 150:Core/Src/SEGGER_RTT_printf.c ****   Width = 1u;
 167              		.loc 1 150 9
 168 0016 0123     		movs	r3, #1
 169 0018 FB61     		str	r3, [r7, #28]
 151:Core/Src/SEGGER_RTT_printf.c ****   while (Number >= Base) {
 170              		.loc 1 151 9
 171 001a 07E0     		b	.L7
 172              	.L8:
 152:Core/Src/SEGGER_RTT_printf.c ****     Number = (Number / Base);
 173              		.loc 1 152 12
 174 001c 3A6A     		ldr	r2, [r7, #32]
 175 001e 7B68     		ldr	r3, [r7, #4]
 176 0020 B2FBF3F3 		udiv	r3, r2, r3
 177 0024 3B62     		str	r3, [r7, #32]
 153:Core/Src/SEGGER_RTT_printf.c ****     Width++;
 178              		.loc 1 153 10
 179 0026 FB69     		ldr	r3, [r7, #28]
 180 0028 0133     		adds	r3, r3, #1
 181 002a FB61     		str	r3, [r7, #28]
 182              	.L7:
 151:Core/Src/SEGGER_RTT_printf.c ****   while (Number >= Base) {
 183              		.loc 1 151 17
 184 002c 3A6A     		ldr	r2, [r7, #32]
 185 002e 7B68     		ldr	r3, [r7, #4]
 186 0030 9A42     		cmp	r2, r3
 187 0032 F3D2     		bcs	.L8
 154:Core/Src/SEGGER_RTT_printf.c ****   }
 155:Core/Src/SEGGER_RTT_printf.c ****   if (NumDigits > Width) {
 188              		.loc 1 155 6
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 7


 189 0034 3A68     		ldr	r2, [r7]
 190 0036 FB69     		ldr	r3, [r7, #28]
 191 0038 9A42     		cmp	r2, r3
 192 003a 01D9     		bls	.L9
 156:Core/Src/SEGGER_RTT_printf.c ****     Width = NumDigits;
 193              		.loc 1 156 11
 194 003c 3B68     		ldr	r3, [r7]
 195 003e FB61     		str	r3, [r7, #28]
 196              	.L9:
 157:Core/Src/SEGGER_RTT_printf.c ****   }
 158:Core/Src/SEGGER_RTT_printf.c ****   //
 159:Core/Src/SEGGER_RTT_printf.c ****   // Print leading chars if necessary
 160:Core/Src/SEGGER_RTT_printf.c ****   //
 161:Core/Src/SEGGER_RTT_printf.c ****   if ((FormatFlags & FORMAT_FLAG_LEFT_JUSTIFY) == 0u) {
 197              		.loc 1 161 20
 198 0040 7B6B     		ldr	r3, [r7, #52]
 199 0042 03F00103 		and	r3, r3, #1
 200              		.loc 1 161 6
 201 0046 002B     		cmp	r3, #0
 202 0048 25D1     		bne	.L10
 162:Core/Src/SEGGER_RTT_printf.c ****     if (FieldWidth != 0u) {
 203              		.loc 1 162 8
 204 004a 3B6B     		ldr	r3, [r7, #48]
 205 004c 002B     		cmp	r3, #0
 206 004e 22D0     		beq	.L10
 163:Core/Src/SEGGER_RTT_printf.c ****       if (((FormatFlags & FORMAT_FLAG_PAD_ZERO) == FORMAT_FLAG_PAD_ZERO) && (NumDigits == 0u)) {
 207              		.loc 1 163 25
 208 0050 7B6B     		ldr	r3, [r7, #52]
 209 0052 03F00203 		and	r3, r3, #2
 210              		.loc 1 163 10
 211 0056 002B     		cmp	r3, #0
 212 0058 05D0     		beq	.L11
 213              		.loc 1 163 74 discriminator 1
 214 005a 3B68     		ldr	r3, [r7]
 215 005c 002B     		cmp	r3, #0
 216 005e 02D1     		bne	.L11
 164:Core/Src/SEGGER_RTT_printf.c ****         c = '0';
 217              		.loc 1 164 11
 218 0060 3023     		movs	r3, #48
 219 0062 FB76     		strb	r3, [r7, #27]
 220 0064 01E0     		b	.L12
 221              	.L11:
 165:Core/Src/SEGGER_RTT_printf.c ****       } else {
 166:Core/Src/SEGGER_RTT_printf.c ****         c = ' ';
 222              		.loc 1 166 11
 223 0066 2023     		movs	r3, #32
 224 0068 FB76     		strb	r3, [r7, #27]
 225              	.L12:
 167:Core/Src/SEGGER_RTT_printf.c ****       }
 168:Core/Src/SEGGER_RTT_printf.c ****       while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 226              		.loc 1 168 13
 227 006a 0BE0     		b	.L13
 228              	.L14:
 169:Core/Src/SEGGER_RTT_printf.c ****         FieldWidth--;
 229              		.loc 1 169 19
 230 006c 3B6B     		ldr	r3, [r7, #48]
 231 006e 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 8


 232 0070 3B63     		str	r3, [r7, #48]
 170:Core/Src/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, c);
 233              		.loc 1 170 9
 234 0072 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 235 0074 1946     		mov	r1, r3
 236 0076 F868     		ldr	r0, [r7, #12]
 237 0078 FFF7FEFF 		bl	_StoreChar
 171:Core/Src/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 238              		.loc 1 171 24
 239 007c FB68     		ldr	r3, [r7, #12]
 240 007e DB68     		ldr	r3, [r3, #12]
 241              		.loc 1 171 12
 242 0080 002B     		cmp	r3, #0
 243 0082 07DB     		blt	.L25
 244              	.L13:
 168:Core/Src/SEGGER_RTT_printf.c ****         FieldWidth--;
 245              		.loc 1 168 33
 246 0084 3B6B     		ldr	r3, [r7, #48]
 247 0086 002B     		cmp	r3, #0
 248 0088 05D0     		beq	.L10
 168:Core/Src/SEGGER_RTT_printf.c ****         FieldWidth--;
 249              		.loc 1 168 33 is_stmt 0 discriminator 1
 250 008a FA69     		ldr	r2, [r7, #28]
 251 008c 3B6B     		ldr	r3, [r7, #48]
 252 008e 9A42     		cmp	r2, r3
 253 0090 ECD3     		bcc	.L14
 254 0092 00E0     		b	.L10
 255              	.L25:
 172:Core/Src/SEGGER_RTT_printf.c ****           break;
 256              		.loc 1 172 11 is_stmt 1
 257 0094 00BF     		nop
 258              	.L10:
 173:Core/Src/SEGGER_RTT_printf.c ****         }
 174:Core/Src/SEGGER_RTT_printf.c ****       }
 175:Core/Src/SEGGER_RTT_printf.c ****     }
 176:Core/Src/SEGGER_RTT_printf.c ****   }
 177:Core/Src/SEGGER_RTT_printf.c ****   if (pBufferDesc->ReturnValue >= 0) {
 259              		.loc 1 177 18
 260 0096 FB68     		ldr	r3, [r7, #12]
 261 0098 DB68     		ldr	r3, [r3, #12]
 262              		.loc 1 177 6
 263 009a 002B     		cmp	r3, #0
 264 009c 55DB     		blt	.L26
 265              	.L19:
 178:Core/Src/SEGGER_RTT_printf.c ****     //
 179:Core/Src/SEGGER_RTT_printf.c ****     // Compute Digit.
 180:Core/Src/SEGGER_RTT_printf.c ****     // Loop until Digit has the value of the highest digit required.
 181:Core/Src/SEGGER_RTT_printf.c ****     // Example: If the output is 345 (Base 10), loop 2 times until Digit is 100.
 182:Core/Src/SEGGER_RTT_printf.c ****     //
 183:Core/Src/SEGGER_RTT_printf.c ****     while (1) {
 184:Core/Src/SEGGER_RTT_printf.c ****       if (NumDigits > 1u) {       // User specified a min number of digits to print? => Make sure w
 266              		.loc 1 184 10
 267 009e 3B68     		ldr	r3, [r7]
 268 00a0 012B     		cmp	r3, #1
 269 00a2 03D9     		bls	.L16
 185:Core/Src/SEGGER_RTT_printf.c ****         NumDigits--;
 270              		.loc 1 185 18
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 9


 271 00a4 3B68     		ldr	r3, [r7]
 272 00a6 013B     		subs	r3, r3, #1
 273 00a8 3B60     		str	r3, [r7]
 274 00aa 09E0     		b	.L17
 275              	.L16:
 186:Core/Src/SEGGER_RTT_printf.c ****       } else {
 187:Core/Src/SEGGER_RTT_printf.c ****         Div = v / Digit;
 276              		.loc 1 187 13
 277 00ac BA68     		ldr	r2, [r7, #8]
 278 00ae 7B6A     		ldr	r3, [r7, #36]
 279 00b0 B2FBF3F3 		udiv	r3, r2, r3
 280 00b4 7B61     		str	r3, [r7, #20]
 188:Core/Src/SEGGER_RTT_printf.c ****         if (Div < Base) {        // Is our divider big enough to extract the highest digit from val
 281              		.loc 1 188 12
 282 00b6 7A69     		ldr	r2, [r7, #20]
 283 00b8 7B68     		ldr	r3, [r7, #4]
 284 00ba 9A42     		cmp	r2, r3
 285 00bc 00D2     		bcs	.L17
 189:Core/Src/SEGGER_RTT_printf.c ****           break;
 286              		.loc 1 189 11
 287 00be 05E0     		b	.L18
 288              	.L17:
 190:Core/Src/SEGGER_RTT_printf.c ****         }
 191:Core/Src/SEGGER_RTT_printf.c ****       }
 192:Core/Src/SEGGER_RTT_printf.c ****       Digit *= Base;
 289              		.loc 1 192 13
 290 00c0 7B6A     		ldr	r3, [r7, #36]
 291 00c2 7A68     		ldr	r2, [r7, #4]
 292 00c4 02FB03F3 		mul	r3, r2, r3
 293 00c8 7B62     		str	r3, [r7, #36]
 184:Core/Src/SEGGER_RTT_printf.c ****         NumDigits--;
 294              		.loc 1 184 10
 295 00ca E8E7     		b	.L19
 296              	.L18:
 193:Core/Src/SEGGER_RTT_printf.c ****     }
 194:Core/Src/SEGGER_RTT_printf.c ****     //
 195:Core/Src/SEGGER_RTT_printf.c ****     // Output digits
 196:Core/Src/SEGGER_RTT_printf.c ****     //
 197:Core/Src/SEGGER_RTT_printf.c ****     do {
 198:Core/Src/SEGGER_RTT_printf.c ****       Div = v / Digit;
 297              		.loc 1 198 11
 298 00cc BA68     		ldr	r2, [r7, #8]
 299 00ce 7B6A     		ldr	r3, [r7, #36]
 300 00d0 B2FBF3F3 		udiv	r3, r2, r3
 301 00d4 7B61     		str	r3, [r7, #20]
 199:Core/Src/SEGGER_RTT_printf.c ****       v -= Div * Digit;
 302              		.loc 1 199 16
 303 00d6 7B69     		ldr	r3, [r7, #20]
 304 00d8 7A6A     		ldr	r2, [r7, #36]
 305 00da 02FB03F3 		mul	r3, r2, r3
 306              		.loc 1 199 9
 307 00de BA68     		ldr	r2, [r7, #8]
 308 00e0 D31A     		subs	r3, r2, r3
 309 00e2 BB60     		str	r3, [r7, #8]
 200:Core/Src/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, _aV2C[Div]);
 310              		.loc 1 200 36
 311 00e4 1B4A     		ldr	r2, .L29
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 10


 312 00e6 7B69     		ldr	r3, [r7, #20]
 313 00e8 1344     		add	r3, r3, r2
 314 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 315              		.loc 1 200 7
 316 00ec 1946     		mov	r1, r3
 317 00ee F868     		ldr	r0, [r7, #12]
 318 00f0 FFF7FEFF 		bl	_StoreChar
 201:Core/Src/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue < 0) {
 319              		.loc 1 201 22
 320 00f4 FB68     		ldr	r3, [r7, #12]
 321 00f6 DB68     		ldr	r3, [r3, #12]
 322              		.loc 1 201 10
 323 00f8 002B     		cmp	r3, #0
 324 00fa 08DB     		blt	.L27
 202:Core/Src/SEGGER_RTT_printf.c ****         break;
 203:Core/Src/SEGGER_RTT_printf.c ****       }
 204:Core/Src/SEGGER_RTT_printf.c ****       Digit /= Base;
 325              		.loc 1 204 13
 326 00fc 7A6A     		ldr	r2, [r7, #36]
 327 00fe 7B68     		ldr	r3, [r7, #4]
 328 0100 B2FBF3F3 		udiv	r3, r2, r3
 329 0104 7B62     		str	r3, [r7, #36]
 205:Core/Src/SEGGER_RTT_printf.c ****     } while (Digit);
 330              		.loc 1 205 14
 331 0106 7B6A     		ldr	r3, [r7, #36]
 332 0108 002B     		cmp	r3, #0
 333 010a DFD1     		bne	.L18
 334 010c 00E0     		b	.L21
 335              	.L27:
 202:Core/Src/SEGGER_RTT_printf.c ****         break;
 336              		.loc 1 202 9
 337 010e 00BF     		nop
 338              	.L21:
 206:Core/Src/SEGGER_RTT_printf.c ****     //
 207:Core/Src/SEGGER_RTT_printf.c ****     // Print trailing spaces if necessary
 208:Core/Src/SEGGER_RTT_printf.c ****     //
 209:Core/Src/SEGGER_RTT_printf.c ****     if ((FormatFlags & FORMAT_FLAG_LEFT_JUSTIFY) == FORMAT_FLAG_LEFT_JUSTIFY) {
 339              		.loc 1 209 22
 340 0110 7B6B     		ldr	r3, [r7, #52]
 341 0112 03F00103 		and	r3, r3, #1
 342              		.loc 1 209 8
 343 0116 002B     		cmp	r3, #0
 344 0118 17D0     		beq	.L26
 210:Core/Src/SEGGER_RTT_printf.c ****       if (FieldWidth != 0u) {
 345              		.loc 1 210 10
 346 011a 3B6B     		ldr	r3, [r7, #48]
 347 011c 002B     		cmp	r3, #0
 348 011e 14D0     		beq	.L26
 211:Core/Src/SEGGER_RTT_printf.c ****         while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 349              		.loc 1 211 15
 350 0120 0AE0     		b	.L22
 351              	.L23:
 212:Core/Src/SEGGER_RTT_printf.c ****           FieldWidth--;
 352              		.loc 1 212 21
 353 0122 3B6B     		ldr	r3, [r7, #48]
 354 0124 013B     		subs	r3, r3, #1
 355 0126 3B63     		str	r3, [r7, #48]
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 11


 213:Core/Src/SEGGER_RTT_printf.c ****           _StoreChar(pBufferDesc, ' ');
 356              		.loc 1 213 11
 357 0128 2021     		movs	r1, #32
 358 012a F868     		ldr	r0, [r7, #12]
 359 012c FFF7FEFF 		bl	_StoreChar
 214:Core/Src/SEGGER_RTT_printf.c ****           if (pBufferDesc->ReturnValue < 0) {
 360              		.loc 1 214 26
 361 0130 FB68     		ldr	r3, [r7, #12]
 362 0132 DB68     		ldr	r3, [r3, #12]
 363              		.loc 1 214 14
 364 0134 002B     		cmp	r3, #0
 365 0136 07DB     		blt	.L28
 366              	.L22:
 211:Core/Src/SEGGER_RTT_printf.c ****           FieldWidth--;
 367              		.loc 1 211 35
 368 0138 3B6B     		ldr	r3, [r7, #48]
 369 013a 002B     		cmp	r3, #0
 370 013c 05D0     		beq	.L26
 211:Core/Src/SEGGER_RTT_printf.c ****           FieldWidth--;
 371              		.loc 1 211 35 is_stmt 0 discriminator 1
 372 013e FA69     		ldr	r2, [r7, #28]
 373 0140 3B6B     		ldr	r3, [r7, #48]
 374 0142 9A42     		cmp	r2, r3
 375 0144 EDD3     		bcc	.L23
 215:Core/Src/SEGGER_RTT_printf.c ****             break;
 216:Core/Src/SEGGER_RTT_printf.c ****           }
 217:Core/Src/SEGGER_RTT_printf.c ****         }
 218:Core/Src/SEGGER_RTT_printf.c ****       }
 219:Core/Src/SEGGER_RTT_printf.c ****     }
 220:Core/Src/SEGGER_RTT_printf.c ****   }
 221:Core/Src/SEGGER_RTT_printf.c **** }
 376              		.loc 1 221 1 is_stmt 1
 377 0146 00E0     		b	.L26
 378              	.L28:
 215:Core/Src/SEGGER_RTT_printf.c ****             break;
 379              		.loc 1 215 13
 380 0148 00BF     		nop
 381              	.L26:
 382              		.loc 1 221 1
 383 014a 00BF     		nop
 384 014c 2837     		adds	r7, r7, #40
 385              	.LCFI8:
 386              		.cfi_def_cfa_offset 8
 387 014e BD46     		mov	sp, r7
 388              	.LCFI9:
 389              		.cfi_def_cfa_register 13
 390              		@ sp needed
 391 0150 80BD     		pop	{r7, pc}
 392              	.L30:
 393 0152 00BF     		.align	2
 394              	.L29:
 395 0154 00000000 		.word	_aV2C.0
 396              		.cfi_endproc
 397              	.LFE1:
 399              		.section	.text._PrintInt,"ax",%progbits
 400              		.align	1
 401              		.syntax unified
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 12


 402              		.thumb
 403              		.thumb_func
 405              	_PrintInt:
 406              	.LFB2:
 222:Core/Src/SEGGER_RTT_printf.c **** 
 223:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
 224:Core/Src/SEGGER_RTT_printf.c **** *
 225:Core/Src/SEGGER_RTT_printf.c **** *       _PrintInt
 226:Core/Src/SEGGER_RTT_printf.c **** */
 227:Core/Src/SEGGER_RTT_printf.c **** static void _PrintInt(SEGGER_RTT_PRINTF_DESC * pBufferDesc, int v, unsigned Base, unsigned NumDigit
 407              		.loc 1 227 146
 408              		.cfi_startproc
 409              		@ args = 8, pretend = 0, frame = 24
 410              		@ frame_needed = 1, uses_anonymous_args = 0
 411 0000 80B5     		push	{r7, lr}
 412              	.LCFI10:
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 7, -8
 415              		.cfi_offset 14, -4
 416 0002 88B0     		sub	sp, sp, #32
 417              	.LCFI11:
 418              		.cfi_def_cfa_offset 40
 419 0004 02AF     		add	r7, sp, #8
 420              	.LCFI12:
 421              		.cfi_def_cfa 7, 32
 422 0006 F860     		str	r0, [r7, #12]
 423 0008 B960     		str	r1, [r7, #8]
 424 000a 7A60     		str	r2, [r7, #4]
 425 000c 3B60     		str	r3, [r7]
 228:Core/Src/SEGGER_RTT_printf.c ****   unsigned Width;
 229:Core/Src/SEGGER_RTT_printf.c ****   int Number;
 230:Core/Src/SEGGER_RTT_printf.c **** 
 231:Core/Src/SEGGER_RTT_printf.c ****   Number = (v < 0) ? -v : v;
 426              		.loc 1 231 10
 427 000e BB68     		ldr	r3, [r7, #8]
 428 0010 002B     		cmp	r3, #0
 429 0012 B8BF     		it	lt
 430 0014 5B42     		rsblt	r3, r3, #0
 431 0016 3B61     		str	r3, [r7, #16]
 232:Core/Src/SEGGER_RTT_printf.c **** 
 233:Core/Src/SEGGER_RTT_printf.c ****   //
 234:Core/Src/SEGGER_RTT_printf.c ****   // Get actual field width
 235:Core/Src/SEGGER_RTT_printf.c ****   //
 236:Core/Src/SEGGER_RTT_printf.c ****   Width = 1u;
 432              		.loc 1 236 9
 433 0018 0123     		movs	r3, #1
 434 001a 7B61     		str	r3, [r7, #20]
 237:Core/Src/SEGGER_RTT_printf.c ****   while (Number >= (int)Base) {
 435              		.loc 1 237 9
 436 001c 07E0     		b	.L32
 437              	.L33:
 238:Core/Src/SEGGER_RTT_printf.c ****     Number = (Number / (int)Base);
 438              		.loc 1 238 24
 439 001e 7B68     		ldr	r3, [r7, #4]
 440              		.loc 1 238 12
 441 0020 3A69     		ldr	r2, [r7, #16]
 442 0022 92FBF3F3 		sdiv	r3, r2, r3
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 13


 443 0026 3B61     		str	r3, [r7, #16]
 239:Core/Src/SEGGER_RTT_printf.c ****     Width++;
 444              		.loc 1 239 10
 445 0028 7B69     		ldr	r3, [r7, #20]
 446 002a 0133     		adds	r3, r3, #1
 447 002c 7B61     		str	r3, [r7, #20]
 448              	.L32:
 237:Core/Src/SEGGER_RTT_printf.c ****   while (Number >= (int)Base) {
 449              		.loc 1 237 20
 450 002e 7B68     		ldr	r3, [r7, #4]
 237:Core/Src/SEGGER_RTT_printf.c ****   while (Number >= (int)Base) {
 451              		.loc 1 237 17
 452 0030 3A69     		ldr	r2, [r7, #16]
 453 0032 9A42     		cmp	r2, r3
 454 0034 F3DA     		bge	.L33
 240:Core/Src/SEGGER_RTT_printf.c ****   }
 241:Core/Src/SEGGER_RTT_printf.c ****   if (NumDigits > Width) {
 455              		.loc 1 241 6
 456 0036 3A68     		ldr	r2, [r7]
 457 0038 7B69     		ldr	r3, [r7, #20]
 458 003a 9A42     		cmp	r2, r3
 459 003c 01D9     		bls	.L34
 242:Core/Src/SEGGER_RTT_printf.c ****     Width = NumDigits;
 460              		.loc 1 242 11
 461 003e 3B68     		ldr	r3, [r7]
 462 0040 7B61     		str	r3, [r7, #20]
 463              	.L34:
 243:Core/Src/SEGGER_RTT_printf.c ****   }
 244:Core/Src/SEGGER_RTT_printf.c ****   if ((FieldWidth > 0u) && ((v < 0) || ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT
 464              		.loc 1 244 6
 465 0042 3B6A     		ldr	r3, [r7, #32]
 466 0044 002B     		cmp	r3, #0
 467 0046 0AD0     		beq	.L35
 468              		.loc 1 244 25 discriminator 1
 469 0048 BB68     		ldr	r3, [r7, #8]
 470 004a 002B     		cmp	r3, #0
 471 004c 04DB     		blt	.L36
 472              		.loc 1 244 54 discriminator 2
 473 004e 7B6A     		ldr	r3, [r7, #36]
 474 0050 03F00403 		and	r3, r3, #4
 475              		.loc 1 244 37 discriminator 2
 476 0054 002B     		cmp	r3, #0
 477 0056 02D0     		beq	.L35
 478              	.L36:
 245:Core/Src/SEGGER_RTT_printf.c ****     FieldWidth--;
 479              		.loc 1 245 15
 480 0058 3B6A     		ldr	r3, [r7, #32]
 481 005a 013B     		subs	r3, r3, #1
 482 005c 3B62     		str	r3, [r7, #32]
 483              	.L35:
 246:Core/Src/SEGGER_RTT_printf.c ****   }
 247:Core/Src/SEGGER_RTT_printf.c **** 
 248:Core/Src/SEGGER_RTT_printf.c ****   //
 249:Core/Src/SEGGER_RTT_printf.c ****   // Print leading spaces if necessary
 250:Core/Src/SEGGER_RTT_printf.c ****   //
 251:Core/Src/SEGGER_RTT_printf.c ****   if ((((FormatFlags & FORMAT_FLAG_PAD_ZERO) == 0u) || (NumDigits != 0u)) && ((FormatFlags & FORMAT
 484              		.loc 1 251 22
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 14


 485 005e 7B6A     		ldr	r3, [r7, #36]
 486 0060 03F00203 		and	r3, r3, #2
 487              		.loc 1 251 6
 488 0064 002B     		cmp	r3, #0
 489 0066 02D0     		beq	.L37
 490              		.loc 1 251 53 discriminator 2
 491 0068 3B68     		ldr	r3, [r7]
 492 006a 002B     		cmp	r3, #0
 493 006c 1CD0     		beq	.L38
 494              	.L37:
 495              		.loc 1 251 92 discriminator 3
 496 006e 7B6A     		ldr	r3, [r7, #36]
 497 0070 03F00103 		and	r3, r3, #1
 498              		.loc 1 251 75 discriminator 3
 499 0074 002B     		cmp	r3, #0
 500 0076 17D1     		bne	.L38
 252:Core/Src/SEGGER_RTT_printf.c ****     if (FieldWidth != 0u) {
 501              		.loc 1 252 8
 502 0078 3B6A     		ldr	r3, [r7, #32]
 503 007a 002B     		cmp	r3, #0
 504 007c 14D0     		beq	.L38
 253:Core/Src/SEGGER_RTT_printf.c ****       while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 505              		.loc 1 253 13
 506 007e 0AE0     		b	.L39
 507              	.L40:
 254:Core/Src/SEGGER_RTT_printf.c ****         FieldWidth--;
 508              		.loc 1 254 19
 509 0080 3B6A     		ldr	r3, [r7, #32]
 510 0082 013B     		subs	r3, r3, #1
 511 0084 3B62     		str	r3, [r7, #32]
 255:Core/Src/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, ' ');
 512              		.loc 1 255 9
 513 0086 2021     		movs	r1, #32
 514 0088 F868     		ldr	r0, [r7, #12]
 515 008a FFF7FEFF 		bl	_StoreChar
 256:Core/Src/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 516              		.loc 1 256 24
 517 008e FB68     		ldr	r3, [r7, #12]
 518 0090 DB68     		ldr	r3, [r3, #12]
 519              		.loc 1 256 12
 520 0092 002B     		cmp	r3, #0
 521 0094 07DB     		blt	.L47
 522              	.L39:
 253:Core/Src/SEGGER_RTT_printf.c ****         FieldWidth--;
 523              		.loc 1 253 33
 524 0096 3B6A     		ldr	r3, [r7, #32]
 525 0098 002B     		cmp	r3, #0
 526 009a 05D0     		beq	.L38
 253:Core/Src/SEGGER_RTT_printf.c ****         FieldWidth--;
 527              		.loc 1 253 33 is_stmt 0 discriminator 1
 528 009c 7A69     		ldr	r2, [r7, #20]
 529 009e 3B6A     		ldr	r3, [r7, #32]
 530 00a0 9A42     		cmp	r2, r3
 531 00a2 EDD3     		bcc	.L40
 532 00a4 00E0     		b	.L38
 533              	.L47:
 257:Core/Src/SEGGER_RTT_printf.c ****           break;
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 15


 534              		.loc 1 257 11 is_stmt 1
 535 00a6 00BF     		nop
 536              	.L38:
 258:Core/Src/SEGGER_RTT_printf.c ****         }
 259:Core/Src/SEGGER_RTT_printf.c ****       }
 260:Core/Src/SEGGER_RTT_printf.c ****     }
 261:Core/Src/SEGGER_RTT_printf.c ****   }
 262:Core/Src/SEGGER_RTT_printf.c ****   //
 263:Core/Src/SEGGER_RTT_printf.c ****   // Print sign if necessary
 264:Core/Src/SEGGER_RTT_printf.c ****   //
 265:Core/Src/SEGGER_RTT_printf.c ****   if (pBufferDesc->ReturnValue >= 0) {
 537              		.loc 1 265 18
 538 00a8 FB68     		ldr	r3, [r7, #12]
 539 00aa DB68     		ldr	r3, [r3, #12]
 540              		.loc 1 265 6
 541 00ac 002B     		cmp	r3, #0
 542 00ae 4ADB     		blt	.L48
 266:Core/Src/SEGGER_RTT_printf.c ****     if (v < 0) {
 543              		.loc 1 266 8
 544 00b0 BB68     		ldr	r3, [r7, #8]
 545 00b2 002B     		cmp	r3, #0
 546 00b4 07DA     		bge	.L42
 267:Core/Src/SEGGER_RTT_printf.c ****       v = -v;
 547              		.loc 1 267 9
 548 00b6 BB68     		ldr	r3, [r7, #8]
 549 00b8 5B42     		rsbs	r3, r3, #0
 550 00ba BB60     		str	r3, [r7, #8]
 268:Core/Src/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '-');
 551              		.loc 1 268 7
 552 00bc 2D21     		movs	r1, #45
 553 00be F868     		ldr	r0, [r7, #12]
 554 00c0 FFF7FEFF 		bl	_StoreChar
 555 00c4 08E0     		b	.L43
 556              	.L42:
 269:Core/Src/SEGGER_RTT_printf.c ****     } else if ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT_SIGN) {
 557              		.loc 1 269 29
 558 00c6 7B6A     		ldr	r3, [r7, #36]
 559 00c8 03F00403 		and	r3, r3, #4
 560              		.loc 1 269 15
 561 00cc 002B     		cmp	r3, #0
 562 00ce 03D0     		beq	.L43
 270:Core/Src/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '+');
 563              		.loc 1 270 7
 564 00d0 2B21     		movs	r1, #43
 565 00d2 F868     		ldr	r0, [r7, #12]
 566 00d4 FFF7FEFF 		bl	_StoreChar
 567              	.L43:
 271:Core/Src/SEGGER_RTT_printf.c ****     } else {
 272:Core/Src/SEGGER_RTT_printf.c **** 
 273:Core/Src/SEGGER_RTT_printf.c ****     }
 274:Core/Src/SEGGER_RTT_printf.c ****     if (pBufferDesc->ReturnValue >= 0) {
 568              		.loc 1 274 20
 569 00d8 FB68     		ldr	r3, [r7, #12]
 570 00da DB68     		ldr	r3, [r3, #12]
 571              		.loc 1 274 8
 572 00dc 002B     		cmp	r3, #0
 573 00de 32DB     		blt	.L48
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 16


 275:Core/Src/SEGGER_RTT_printf.c ****       //
 276:Core/Src/SEGGER_RTT_printf.c ****       // Print leading zeros if necessary
 277:Core/Src/SEGGER_RTT_printf.c ****       //
 278:Core/Src/SEGGER_RTT_printf.c ****       if (((FormatFlags & FORMAT_FLAG_PAD_ZERO) == FORMAT_FLAG_PAD_ZERO) && ((FormatFlags & FORMAT_
 574              		.loc 1 278 25
 575 00e0 7B6A     		ldr	r3, [r7, #36]
 576 00e2 03F00203 		and	r3, r3, #2
 577              		.loc 1 278 10
 578 00e6 002B     		cmp	r3, #0
 579 00e8 1FD0     		beq	.L44
 580              		.loc 1 278 91 discriminator 1
 581 00ea 7B6A     		ldr	r3, [r7, #36]
 582 00ec 03F00103 		and	r3, r3, #1
 583              		.loc 1 278 74 discriminator 1
 584 00f0 002B     		cmp	r3, #0
 585 00f2 1AD1     		bne	.L44
 586              		.loc 1 278 126 discriminator 2
 587 00f4 3B68     		ldr	r3, [r7]
 588 00f6 002B     		cmp	r3, #0
 589 00f8 17D1     		bne	.L44
 279:Core/Src/SEGGER_RTT_printf.c ****         if (FieldWidth != 0u) {
 590              		.loc 1 279 12
 591 00fa 3B6A     		ldr	r3, [r7, #32]
 592 00fc 002B     		cmp	r3, #0
 593 00fe 14D0     		beq	.L44
 280:Core/Src/SEGGER_RTT_printf.c ****           while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 594              		.loc 1 280 17
 595 0100 0AE0     		b	.L45
 596              	.L46:
 281:Core/Src/SEGGER_RTT_printf.c ****             FieldWidth--;
 597              		.loc 1 281 23
 598 0102 3B6A     		ldr	r3, [r7, #32]
 599 0104 013B     		subs	r3, r3, #1
 600 0106 3B62     		str	r3, [r7, #32]
 282:Core/Src/SEGGER_RTT_printf.c ****             _StoreChar(pBufferDesc, '0');
 601              		.loc 1 282 13
 602 0108 3021     		movs	r1, #48
 603 010a F868     		ldr	r0, [r7, #12]
 604 010c FFF7FEFF 		bl	_StoreChar
 283:Core/Src/SEGGER_RTT_printf.c ****             if (pBufferDesc->ReturnValue < 0) {
 605              		.loc 1 283 28
 606 0110 FB68     		ldr	r3, [r7, #12]
 607 0112 DB68     		ldr	r3, [r3, #12]
 608              		.loc 1 283 16
 609 0114 002B     		cmp	r3, #0
 610 0116 07DB     		blt	.L49
 611              	.L45:
 280:Core/Src/SEGGER_RTT_printf.c ****             FieldWidth--;
 612              		.loc 1 280 37
 613 0118 3B6A     		ldr	r3, [r7, #32]
 614 011a 002B     		cmp	r3, #0
 615 011c 05D0     		beq	.L44
 280:Core/Src/SEGGER_RTT_printf.c ****             FieldWidth--;
 616              		.loc 1 280 37 is_stmt 0 discriminator 1
 617 011e 7A69     		ldr	r2, [r7, #20]
 618 0120 3B6A     		ldr	r3, [r7, #32]
 619 0122 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 17


 620 0124 EDD3     		bcc	.L46
 621 0126 00E0     		b	.L44
 622              	.L49:
 284:Core/Src/SEGGER_RTT_printf.c ****               break;
 623              		.loc 1 284 15 is_stmt 1
 624 0128 00BF     		nop
 625              	.L44:
 285:Core/Src/SEGGER_RTT_printf.c ****             }
 286:Core/Src/SEGGER_RTT_printf.c ****           }
 287:Core/Src/SEGGER_RTT_printf.c ****         }
 288:Core/Src/SEGGER_RTT_printf.c ****       }
 289:Core/Src/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue >= 0) {
 626              		.loc 1 289 22
 627 012a FB68     		ldr	r3, [r7, #12]
 628 012c DB68     		ldr	r3, [r3, #12]
 629              		.loc 1 289 10
 630 012e 002B     		cmp	r3, #0
 631 0130 09DB     		blt	.L48
 290:Core/Src/SEGGER_RTT_printf.c ****         //
 291:Core/Src/SEGGER_RTT_printf.c ****         // Print number without sign
 292:Core/Src/SEGGER_RTT_printf.c ****         //
 293:Core/Src/SEGGER_RTT_printf.c ****         _PrintUnsigned(pBufferDesc, (unsigned)v, Base, NumDigits, FieldWidth, FormatFlags);
 632              		.loc 1 293 9
 633 0132 B968     		ldr	r1, [r7, #8]
 634 0134 7B6A     		ldr	r3, [r7, #36]
 635 0136 0193     		str	r3, [sp, #4]
 636 0138 3B6A     		ldr	r3, [r7, #32]
 637 013a 0093     		str	r3, [sp]
 638 013c 3B68     		ldr	r3, [r7]
 639 013e 7A68     		ldr	r2, [r7, #4]
 640 0140 F868     		ldr	r0, [r7, #12]
 641 0142 FFF7FEFF 		bl	_PrintUnsigned
 642              	.L48:
 294:Core/Src/SEGGER_RTT_printf.c ****       }
 295:Core/Src/SEGGER_RTT_printf.c ****     }
 296:Core/Src/SEGGER_RTT_printf.c ****   }
 297:Core/Src/SEGGER_RTT_printf.c **** }
 643              		.loc 1 297 1
 644 0146 00BF     		nop
 645 0148 1837     		adds	r7, r7, #24
 646              	.LCFI13:
 647              		.cfi_def_cfa_offset 8
 648 014a BD46     		mov	sp, r7
 649              	.LCFI14:
 650              		.cfi_def_cfa_register 13
 651              		@ sp needed
 652 014c 80BD     		pop	{r7, pc}
 653              		.cfi_endproc
 654              	.LFE2:
 656              		.section	.rodata
 657              		.align	2
 658              	.LC0:
 659 0000 284E554C 		.ascii	"(NULL)\000"
 659      4C2900
 660              		.section	.text.SEGGER_RTT_vprintf,"ax",%progbits
 661              		.align	1
 662              		.global	SEGGER_RTT_vprintf
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 18


 663              		.syntax unified
 664              		.thumb
 665              		.thumb_func
 667              	SEGGER_RTT_vprintf:
 668              	.LFB3:
 298:Core/Src/SEGGER_RTT_printf.c **** 
 299:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
 300:Core/Src/SEGGER_RTT_printf.c **** *
 301:Core/Src/SEGGER_RTT_printf.c **** *       Public code
 302:Core/Src/SEGGER_RTT_printf.c **** *
 303:Core/Src/SEGGER_RTT_printf.c **** **********************************************************************
 304:Core/Src/SEGGER_RTT_printf.c **** */
 305:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
 306:Core/Src/SEGGER_RTT_printf.c **** *
 307:Core/Src/SEGGER_RTT_printf.c **** *       SEGGER_RTT_vprintf
 308:Core/Src/SEGGER_RTT_printf.c **** *
 309:Core/Src/SEGGER_RTT_printf.c **** *  Function description
 310:Core/Src/SEGGER_RTT_printf.c **** *    Stores a formatted string in SEGGER RTT control block.
 311:Core/Src/SEGGER_RTT_printf.c **** *    This data is read by the host.
 312:Core/Src/SEGGER_RTT_printf.c **** *
 313:Core/Src/SEGGER_RTT_printf.c **** *  Parameters
 314:Core/Src/SEGGER_RTT_printf.c **** *    BufferIndex  Index of "Up"-buffer to be used. (e.g. 0 for "Terminal")
 315:Core/Src/SEGGER_RTT_printf.c **** *    sFormat      Pointer to format string
 316:Core/Src/SEGGER_RTT_printf.c **** *    pParamList   Pointer to the list of arguments for the format string
 317:Core/Src/SEGGER_RTT_printf.c **** *
 318:Core/Src/SEGGER_RTT_printf.c **** *  Return values
 319:Core/Src/SEGGER_RTT_printf.c **** *    >= 0:  Number of bytes which have been stored in the "Up"-buffer.
 320:Core/Src/SEGGER_RTT_printf.c **** *     < 0:  Error
 321:Core/Src/SEGGER_RTT_printf.c **** */
 322:Core/Src/SEGGER_RTT_printf.c **** int SEGGER_RTT_vprintf(unsigned BufferIndex, const char * sFormat, va_list * pParamList) {
 669              		.loc 1 322 90
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 128
 672              		@ frame_needed = 1, uses_anonymous_args = 0
 673 0000 80B5     		push	{r7, lr}
 674              	.LCFI15:
 675              		.cfi_def_cfa_offset 8
 676              		.cfi_offset 7, -8
 677              		.cfi_offset 14, -4
 678 0002 A2B0     		sub	sp, sp, #136
 679              	.LCFI16:
 680              		.cfi_def_cfa_offset 144
 681 0004 02AF     		add	r7, sp, #8
 682              	.LCFI17:
 683              		.cfi_def_cfa 7, 136
 684 0006 F860     		str	r0, [r7, #12]
 685 0008 B960     		str	r1, [r7, #8]
 686 000a 7A60     		str	r2, [r7, #4]
 323:Core/Src/SEGGER_RTT_printf.c ****   char c;
 324:Core/Src/SEGGER_RTT_printf.c ****   SEGGER_RTT_PRINTF_DESC BufferDesc;
 325:Core/Src/SEGGER_RTT_printf.c ****   int v;
 326:Core/Src/SEGGER_RTT_printf.c ****   unsigned NumDigits;
 327:Core/Src/SEGGER_RTT_printf.c ****   unsigned FormatFlags;
 328:Core/Src/SEGGER_RTT_printf.c ****   unsigned FieldWidth;
 329:Core/Src/SEGGER_RTT_printf.c ****   char acBuffer[SEGGER_RTT_PRINTF_BUFFER_SIZE];
 330:Core/Src/SEGGER_RTT_printf.c **** 
 331:Core/Src/SEGGER_RTT_printf.c ****   BufferDesc.pBuffer        = acBuffer;
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 19


 687              		.loc 1 331 29
 688 000c 07F11003 		add	r3, r7, #16
 689 0010 3B65     		str	r3, [r7, #80]
 332:Core/Src/SEGGER_RTT_printf.c ****   BufferDesc.BufferSize     = SEGGER_RTT_PRINTF_BUFFER_SIZE;
 690              		.loc 1 332 29
 691 0012 4023     		movs	r3, #64
 692 0014 7B65     		str	r3, [r7, #84]
 333:Core/Src/SEGGER_RTT_printf.c ****   BufferDesc.Cnt            = 0u;
 693              		.loc 1 333 29
 694 0016 0023     		movs	r3, #0
 695 0018 BB65     		str	r3, [r7, #88]
 334:Core/Src/SEGGER_RTT_printf.c ****   BufferDesc.RTTBufferIndex = BufferIndex;
 696              		.loc 1 334 29
 697 001a FB68     		ldr	r3, [r7, #12]
 698 001c 3B66     		str	r3, [r7, #96]
 335:Core/Src/SEGGER_RTT_printf.c ****   BufferDesc.ReturnValue    = 0;
 699              		.loc 1 335 29
 700 001e 0023     		movs	r3, #0
 701 0020 FB65     		str	r3, [r7, #92]
 702              	.L84:
 336:Core/Src/SEGGER_RTT_printf.c **** 
 337:Core/Src/SEGGER_RTT_printf.c ****   do {
 338:Core/Src/SEGGER_RTT_printf.c ****     c = *sFormat;
 703              		.loc 1 338 7
 704 0022 BB68     		ldr	r3, [r7, #8]
 705 0024 1B78     		ldrb	r3, [r3]
 706 0026 87F87F30 		strb	r3, [r7, #127]
 339:Core/Src/SEGGER_RTT_printf.c ****     sFormat++;
 707              		.loc 1 339 12
 708 002a BB68     		ldr	r3, [r7, #8]
 709 002c 0133     		adds	r3, r3, #1
 710 002e BB60     		str	r3, [r7, #8]
 340:Core/Src/SEGGER_RTT_printf.c ****     if (c == 0u) {
 711              		.loc 1 340 8
 712 0030 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 713 0034 002B     		cmp	r3, #0
 714 0036 00F0A481 		beq	.L89
 341:Core/Src/SEGGER_RTT_printf.c ****       break;
 342:Core/Src/SEGGER_RTT_printf.c ****     }
 343:Core/Src/SEGGER_RTT_printf.c ****     if (c == '%') {
 715              		.loc 1 343 8
 716 003a 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 717 003e 252B     		cmp	r3, #37
 718 0040 40F09281 		bne	.L53
 344:Core/Src/SEGGER_RTT_printf.c ****       //
 345:Core/Src/SEGGER_RTT_printf.c ****       // Filter out flags
 346:Core/Src/SEGGER_RTT_printf.c ****       //
 347:Core/Src/SEGGER_RTT_printf.c ****       FormatFlags = 0u;
 719              		.loc 1 347 19
 720 0044 0023     		movs	r3, #0
 721 0046 3B67     		str	r3, [r7, #112]
 348:Core/Src/SEGGER_RTT_printf.c ****       v = 1;
 722              		.loc 1 348 9
 723 0048 0123     		movs	r3, #1
 724 004a BB67     		str	r3, [r7, #120]
 725              	.L61:
 349:Core/Src/SEGGER_RTT_printf.c ****       do {
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 20


 350:Core/Src/SEGGER_RTT_printf.c ****         c = *sFormat;
 726              		.loc 1 350 11
 727 004c BB68     		ldr	r3, [r7, #8]
 728 004e 1B78     		ldrb	r3, [r3]
 729 0050 87F87F30 		strb	r3, [r7, #127]
 351:Core/Src/SEGGER_RTT_printf.c ****         switch (c) {
 730              		.loc 1 351 9
 731 0054 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 732 0058 233B     		subs	r3, r3, #35
 733 005a 0D2B     		cmp	r3, #13
 734 005c 3ED8     		bhi	.L54
 735 005e 01A2     		adr	r2, .L56
 736 0060 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 737              		.p2align 2
 738              	.L56:
 739 0064 CD000000 		.word	.L59+1
 740 0068 DD000000 		.word	.L54+1
 741 006c DD000000 		.word	.L54+1
 742 0070 DD000000 		.word	.L54+1
 743 0074 DD000000 		.word	.L54+1
 744 0078 DD000000 		.word	.L54+1
 745 007c DD000000 		.word	.L54+1
 746 0080 DD000000 		.word	.L54+1
 747 0084 BD000000 		.word	.L58+1
 748 0088 DD000000 		.word	.L54+1
 749 008c 9D000000 		.word	.L57+1
 750 0090 DD000000 		.word	.L54+1
 751 0094 DD000000 		.word	.L54+1
 752 0098 AD000000 		.word	.L55+1
 753              		.p2align 1
 754              	.L57:
 352:Core/Src/SEGGER_RTT_printf.c ****         case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
 755              		.loc 1 352 31
 756 009c 3B6F     		ldr	r3, [r7, #112]
 757 009e 43F00103 		orr	r3, r3, #1
 758 00a2 3B67     		str	r3, [r7, #112]
 759              		.loc 1 352 67
 760 00a4 BB68     		ldr	r3, [r7, #8]
 761 00a6 0133     		adds	r3, r3, #1
 762 00a8 BB60     		str	r3, [r7, #8]
 763              		.loc 1 352 71
 764 00aa 1AE0     		b	.L60
 765              	.L55:
 353:Core/Src/SEGGER_RTT_printf.c ****         case '0': FormatFlags |= FORMAT_FLAG_PAD_ZERO;     sFormat++; break;
 766              		.loc 1 353 31
 767 00ac 3B6F     		ldr	r3, [r7, #112]
 768 00ae 43F00203 		orr	r3, r3, #2
 769 00b2 3B67     		str	r3, [r7, #112]
 770              		.loc 1 353 67
 771 00b4 BB68     		ldr	r3, [r7, #8]
 772 00b6 0133     		adds	r3, r3, #1
 773 00b8 BB60     		str	r3, [r7, #8]
 774              		.loc 1 353 71
 775 00ba 12E0     		b	.L60
 776              	.L58:
 354:Core/Src/SEGGER_RTT_printf.c ****         case '+': FormatFlags |= FORMAT_FLAG_PRINT_SIGN;   sFormat++; break;
 777              		.loc 1 354 31
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 21


 778 00bc 3B6F     		ldr	r3, [r7, #112]
 779 00be 43F00403 		orr	r3, r3, #4
 780 00c2 3B67     		str	r3, [r7, #112]
 781              		.loc 1 354 67
 782 00c4 BB68     		ldr	r3, [r7, #8]
 783 00c6 0133     		adds	r3, r3, #1
 784 00c8 BB60     		str	r3, [r7, #8]
 785              		.loc 1 354 71
 786 00ca 0AE0     		b	.L60
 787              	.L59:
 355:Core/Src/SEGGER_RTT_printf.c ****         case '#': FormatFlags |= FORMAT_FLAG_ALTERNATE;    sFormat++; break;
 788              		.loc 1 355 31
 789 00cc 3B6F     		ldr	r3, [r7, #112]
 790 00ce 43F00803 		orr	r3, r3, #8
 791 00d2 3B67     		str	r3, [r7, #112]
 792              		.loc 1 355 67
 793 00d4 BB68     		ldr	r3, [r7, #8]
 794 00d6 0133     		adds	r3, r3, #1
 795 00d8 BB60     		str	r3, [r7, #8]
 796              		.loc 1 355 71
 797 00da 02E0     		b	.L60
 798              	.L54:
 356:Core/Src/SEGGER_RTT_printf.c ****         default:  v = 0; break;
 799              		.loc 1 356 21
 800 00dc 0023     		movs	r3, #0
 801 00de BB67     		str	r3, [r7, #120]
 802              		.loc 1 356 26
 803 00e0 00BF     		nop
 804              	.L60:
 357:Core/Src/SEGGER_RTT_printf.c ****         }
 358:Core/Src/SEGGER_RTT_printf.c ****       } while (v);
 805              		.loc 1 358 16
 806 00e2 BB6F     		ldr	r3, [r7, #120]
 807 00e4 002B     		cmp	r3, #0
 808 00e6 B1D1     		bne	.L61
 359:Core/Src/SEGGER_RTT_printf.c ****       //
 360:Core/Src/SEGGER_RTT_printf.c ****       // filter out field with
 361:Core/Src/SEGGER_RTT_printf.c ****       //
 362:Core/Src/SEGGER_RTT_printf.c ****       FieldWidth = 0u;
 809              		.loc 1 362 18
 810 00e8 0023     		movs	r3, #0
 811 00ea FB66     		str	r3, [r7, #108]
 812              	.L63:
 363:Core/Src/SEGGER_RTT_printf.c ****       do {
 364:Core/Src/SEGGER_RTT_printf.c ****         c = *sFormat;
 813              		.loc 1 364 11
 814 00ec BB68     		ldr	r3, [r7, #8]
 815 00ee 1B78     		ldrb	r3, [r3]
 816 00f0 87F87F30 		strb	r3, [r7, #127]
 365:Core/Src/SEGGER_RTT_printf.c ****         if ((c < '0') || (c > '9')) {
 817              		.loc 1 365 12
 818 00f4 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 819 00f8 2F2B     		cmp	r3, #47
 820 00fa 12D9     		bls	.L62
 821              		.loc 1 365 23 discriminator 1
 822 00fc 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 823 0100 392B     		cmp	r3, #57
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 22


 824 0102 0ED8     		bhi	.L62
 366:Core/Src/SEGGER_RTT_printf.c ****           break;
 367:Core/Src/SEGGER_RTT_printf.c ****         }
 368:Core/Src/SEGGER_RTT_printf.c ****         sFormat++;
 825              		.loc 1 368 16
 826 0104 BB68     		ldr	r3, [r7, #8]
 827 0106 0133     		adds	r3, r3, #1
 828 0108 BB60     		str	r3, [r7, #8]
 369:Core/Src/SEGGER_RTT_printf.c ****         FieldWidth = (FieldWidth * 10u) + ((unsigned)c - '0');
 829              		.loc 1 369 34
 830 010a FA6E     		ldr	r2, [r7, #108]
 831 010c 1346     		mov	r3, r2
 832 010e 9B00     		lsls	r3, r3, #2
 833 0110 1344     		add	r3, r3, r2
 834 0112 5B00     		lsls	r3, r3, #1
 835 0114 1A46     		mov	r2, r3
 836              		.loc 1 369 44
 837 0116 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 838              		.loc 1 369 41
 839 011a 1344     		add	r3, r3, r2
 840              		.loc 1 369 20
 841 011c 303B     		subs	r3, r3, #48
 842 011e FB66     		str	r3, [r7, #108]
 364:Core/Src/SEGGER_RTT_printf.c ****         if ((c < '0') || (c > '9')) {
 843              		.loc 1 364 11
 844 0120 E4E7     		b	.L63
 845              	.L62:
 370:Core/Src/SEGGER_RTT_printf.c ****       } while (1);
 371:Core/Src/SEGGER_RTT_printf.c **** 
 372:Core/Src/SEGGER_RTT_printf.c ****       //
 373:Core/Src/SEGGER_RTT_printf.c ****       // Filter out precision (number of digits to display)
 374:Core/Src/SEGGER_RTT_printf.c ****       //
 375:Core/Src/SEGGER_RTT_printf.c ****       NumDigits = 0u;
 846              		.loc 1 375 17
 847 0122 0023     		movs	r3, #0
 848 0124 7B67     		str	r3, [r7, #116]
 376:Core/Src/SEGGER_RTT_printf.c ****       c = *sFormat;
 849              		.loc 1 376 9
 850 0126 BB68     		ldr	r3, [r7, #8]
 851 0128 1B78     		ldrb	r3, [r3]
 852 012a 87F87F30 		strb	r3, [r7, #127]
 377:Core/Src/SEGGER_RTT_printf.c ****       if (c == '.') {
 853              		.loc 1 377 10
 854 012e 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 855 0132 2E2B     		cmp	r3, #46
 856 0134 1DD1     		bne	.L64
 378:Core/Src/SEGGER_RTT_printf.c ****         sFormat++;
 857              		.loc 1 378 16
 858 0136 BB68     		ldr	r3, [r7, #8]
 859 0138 0133     		adds	r3, r3, #1
 860 013a BB60     		str	r3, [r7, #8]
 861              	.L65:
 379:Core/Src/SEGGER_RTT_printf.c ****         do {
 380:Core/Src/SEGGER_RTT_printf.c ****           c = *sFormat;
 862              		.loc 1 380 13
 863 013c BB68     		ldr	r3, [r7, #8]
 864 013e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 23


 865 0140 87F87F30 		strb	r3, [r7, #127]
 381:Core/Src/SEGGER_RTT_printf.c ****           if ((c < '0') || (c > '9')) {
 866              		.loc 1 381 14
 867 0144 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 868 0148 2F2B     		cmp	r3, #47
 869 014a 12D9     		bls	.L64
 870              		.loc 1 381 25 discriminator 1
 871 014c 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 872 0150 392B     		cmp	r3, #57
 873 0152 0ED8     		bhi	.L64
 382:Core/Src/SEGGER_RTT_printf.c ****             break;
 383:Core/Src/SEGGER_RTT_printf.c ****           }
 384:Core/Src/SEGGER_RTT_printf.c ****           sFormat++;
 874              		.loc 1 384 18
 875 0154 BB68     		ldr	r3, [r7, #8]
 876 0156 0133     		adds	r3, r3, #1
 877 0158 BB60     		str	r3, [r7, #8]
 385:Core/Src/SEGGER_RTT_printf.c ****           NumDigits = NumDigits * 10u + ((unsigned)c - '0');
 878              		.loc 1 385 33
 879 015a 7A6F     		ldr	r2, [r7, #116]
 880 015c 1346     		mov	r3, r2
 881 015e 9B00     		lsls	r3, r3, #2
 882 0160 1344     		add	r3, r3, r2
 883 0162 5B00     		lsls	r3, r3, #1
 884 0164 1A46     		mov	r2, r3
 885              		.loc 1 385 42
 886 0166 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 887              		.loc 1 385 39
 888 016a 1344     		add	r3, r3, r2
 889              		.loc 1 385 21
 890 016c 303B     		subs	r3, r3, #48
 891 016e 7B67     		str	r3, [r7, #116]
 380:Core/Src/SEGGER_RTT_printf.c ****           if ((c < '0') || (c > '9')) {
 892              		.loc 1 380 13
 893 0170 E4E7     		b	.L65
 894              	.L64:
 386:Core/Src/SEGGER_RTT_printf.c ****         } while (1);
 387:Core/Src/SEGGER_RTT_printf.c ****       }
 388:Core/Src/SEGGER_RTT_printf.c ****       //
 389:Core/Src/SEGGER_RTT_printf.c ****       // Filter out length modifier
 390:Core/Src/SEGGER_RTT_printf.c ****       //
 391:Core/Src/SEGGER_RTT_printf.c ****       c = *sFormat;
 895              		.loc 1 391 9
 896 0172 BB68     		ldr	r3, [r7, #8]
 897 0174 1B78     		ldrb	r3, [r3]
 898 0176 87F87F30 		strb	r3, [r7, #127]
 899              	.L68:
 392:Core/Src/SEGGER_RTT_printf.c ****       do {
 393:Core/Src/SEGGER_RTT_printf.c ****         if ((c == 'l') || (c == 'h')) {
 900              		.loc 1 393 12
 901 017a 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 902 017e 6C2B     		cmp	r3, #108
 903 0180 03D0     		beq	.L66
 904              		.loc 1 393 24 discriminator 1
 905 0182 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 906 0186 682B     		cmp	r3, #104
 907 0188 07D1     		bne	.L67
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 24


 908              	.L66:
 394:Core/Src/SEGGER_RTT_printf.c ****           sFormat++;
 909              		.loc 1 394 18
 910 018a BB68     		ldr	r3, [r7, #8]
 911 018c 0133     		adds	r3, r3, #1
 912 018e BB60     		str	r3, [r7, #8]
 395:Core/Src/SEGGER_RTT_printf.c ****           c = *sFormat;
 913              		.loc 1 395 13
 914 0190 BB68     		ldr	r3, [r7, #8]
 915 0192 1B78     		ldrb	r3, [r3]
 916 0194 87F87F30 		strb	r3, [r7, #127]
 393:Core/Src/SEGGER_RTT_printf.c ****           sFormat++;
 917              		.loc 1 393 12
 918 0198 EFE7     		b	.L68
 919              	.L67:
 396:Core/Src/SEGGER_RTT_printf.c ****         } else {
 397:Core/Src/SEGGER_RTT_printf.c ****           break;
 398:Core/Src/SEGGER_RTT_printf.c ****         }
 399:Core/Src/SEGGER_RTT_printf.c ****       } while (1);
 400:Core/Src/SEGGER_RTT_printf.c ****       //
 401:Core/Src/SEGGER_RTT_printf.c ****       // Handle specifiers
 402:Core/Src/SEGGER_RTT_printf.c ****       //
 403:Core/Src/SEGGER_RTT_printf.c ****       switch (c) {
 920              		.loc 1 403 7
 921 019a 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 922 019e 252B     		cmp	r3, #37
 923 01a0 00F0D680 		beq	.L69
 924 01a4 252B     		cmp	r3, #37
 925 01a6 C0F2DA80 		blt	.L90
 926 01aa 782B     		cmp	r3, #120
 927 01ac 00F3D780 		bgt	.L90
 928 01b0 582B     		cmp	r3, #88
 929 01b2 C0F2D480 		blt	.L90
 930 01b6 583B     		subs	r3, r3, #88
 931 01b8 202B     		cmp	r3, #32
 932 01ba 00F2D080 		bhi	.L90
 933 01be 01A2     		adr	r2, .L72
 934 01c0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 935              		.p2align 2
 936              	.L72:
 937 01c4 BB020000 		.word	.L71+1
 938 01c8 5F030000 		.word	.L90+1
 939 01cc 5F030000 		.word	.L90+1
 940 01d0 5F030000 		.word	.L90+1
 941 01d4 5F030000 		.word	.L90+1
 942 01d8 5F030000 		.word	.L90+1
 943 01dc 5F030000 		.word	.L90+1
 944 01e0 5F030000 		.word	.L90+1
 945 01e4 5F030000 		.word	.L90+1
 946 01e8 5F030000 		.word	.L90+1
 947 01ec 5F030000 		.word	.L90+1
 948 01f0 49020000 		.word	.L77+1
 949 01f4 6F020000 		.word	.L76+1
 950 01f8 5F030000 		.word	.L90+1
 951 01fc 5F030000 		.word	.L90+1
 952 0200 5F030000 		.word	.L90+1
 953 0204 5F030000 		.word	.L90+1
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 25


 954 0208 5F030000 		.word	.L90+1
 955 020c 5F030000 		.word	.L90+1
 956 0210 5F030000 		.word	.L90+1
 957 0214 5F030000 		.word	.L90+1
 958 0218 5F030000 		.word	.L90+1
 959 021c 5F030000 		.word	.L90+1
 960 0220 5F030000 		.word	.L90+1
 961 0224 2B030000 		.word	.L75+1
 962 0228 5F030000 		.word	.L90+1
 963 022c 5F030000 		.word	.L90+1
 964 0230 E1020000 		.word	.L74+1
 965 0234 5F030000 		.word	.L90+1
 966 0238 95020000 		.word	.L73+1
 967 023c 5F030000 		.word	.L90+1
 968 0240 5F030000 		.word	.L90+1
 969 0244 BB020000 		.word	.L71+1
 970              		.p2align 1
 971              	.L77:
 972              	.LBB2:
 404:Core/Src/SEGGER_RTT_printf.c ****       case 'c': {
 405:Core/Src/SEGGER_RTT_printf.c ****         char c0;
 406:Core/Src/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 973              		.loc 1 406 11
 974 0248 7B68     		ldr	r3, [r7, #4]
 975 024a 1B68     		ldr	r3, [r3]
 976 024c 191D     		adds	r1, r3, #4
 977 024e 7A68     		ldr	r2, [r7, #4]
 978 0250 1160     		str	r1, [r2]
 979 0252 1B68     		ldr	r3, [r3]
 980 0254 BB67     		str	r3, [r7, #120]
 407:Core/Src/SEGGER_RTT_printf.c ****         c0 = (char)v;
 981              		.loc 1 407 12
 982 0256 BB6F     		ldr	r3, [r7, #120]
 983 0258 87F86730 		strb	r3, [r7, #103]
 408:Core/Src/SEGGER_RTT_printf.c ****         _StoreChar(&BufferDesc, c0);
 984              		.loc 1 408 9
 985 025c 97F86720 		ldrb	r2, [r7, #103]	@ zero_extendqisi2
 986 0260 07F15003 		add	r3, r7, #80
 987 0264 1146     		mov	r1, r2
 988 0266 1846     		mov	r0, r3
 989 0268 FFF7FEFF 		bl	_StoreChar
 409:Core/Src/SEGGER_RTT_printf.c ****         break;
 990              		.loc 1 409 9
 991 026c 78E0     		b	.L78
 992              	.L76:
 993              	.LBE2:
 410:Core/Src/SEGGER_RTT_printf.c ****       }
 411:Core/Src/SEGGER_RTT_printf.c ****       case 'd':
 412:Core/Src/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 994              		.loc 1 412 11
 995 026e 7B68     		ldr	r3, [r7, #4]
 996 0270 1B68     		ldr	r3, [r3]
 997 0272 191D     		adds	r1, r3, #4
 998 0274 7A68     		ldr	r2, [r7, #4]
 999 0276 1160     		str	r1, [r2]
 1000 0278 1B68     		ldr	r3, [r3]
 1001 027a BB67     		str	r3, [r7, #120]
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 26


 413:Core/Src/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 1002              		.loc 1 413 9
 1003 027c 07F15000 		add	r0, r7, #80
 1004 0280 3B6F     		ldr	r3, [r7, #112]
 1005 0282 0193     		str	r3, [sp, #4]
 1006 0284 FB6E     		ldr	r3, [r7, #108]
 1007 0286 0093     		str	r3, [sp]
 1008 0288 7B6F     		ldr	r3, [r7, #116]
 1009 028a 0A22     		movs	r2, #10
 1010 028c B96F     		ldr	r1, [r7, #120]
 1011 028e FFF7FEFF 		bl	_PrintInt
 414:Core/Src/SEGGER_RTT_printf.c ****         break;
 1012              		.loc 1 414 9
 1013 0292 65E0     		b	.L78
 1014              	.L73:
 415:Core/Src/SEGGER_RTT_printf.c ****       case 'u':
 416:Core/Src/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 1015              		.loc 1 416 11
 1016 0294 7B68     		ldr	r3, [r7, #4]
 1017 0296 1B68     		ldr	r3, [r3]
 1018 0298 191D     		adds	r1, r3, #4
 1019 029a 7A68     		ldr	r2, [r7, #4]
 1020 029c 1160     		str	r1, [r2]
 1021 029e 1B68     		ldr	r3, [r3]
 1022 02a0 BB67     		str	r3, [r7, #120]
 417:Core/Src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 1023              		.loc 1 417 9
 1024 02a2 B96F     		ldr	r1, [r7, #120]
 1025 02a4 07F15000 		add	r0, r7, #80
 1026 02a8 3B6F     		ldr	r3, [r7, #112]
 1027 02aa 0193     		str	r3, [sp, #4]
 1028 02ac FB6E     		ldr	r3, [r7, #108]
 1029 02ae 0093     		str	r3, [sp]
 1030 02b0 7B6F     		ldr	r3, [r7, #116]
 1031 02b2 0A22     		movs	r2, #10
 1032 02b4 FFF7FEFF 		bl	_PrintUnsigned
 418:Core/Src/SEGGER_RTT_printf.c ****         break;
 1033              		.loc 1 418 9
 1034 02b8 52E0     		b	.L78
 1035              	.L71:
 419:Core/Src/SEGGER_RTT_printf.c ****       case 'x':
 420:Core/Src/SEGGER_RTT_printf.c ****       case 'X':
 421:Core/Src/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 1036              		.loc 1 421 11
 1037 02ba 7B68     		ldr	r3, [r7, #4]
 1038 02bc 1B68     		ldr	r3, [r3]
 1039 02be 191D     		adds	r1, r3, #4
 1040 02c0 7A68     		ldr	r2, [r7, #4]
 1041 02c2 1160     		str	r1, [r2]
 1042 02c4 1B68     		ldr	r3, [r3]
 1043 02c6 BB67     		str	r3, [r7, #120]
 422:Core/Src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 1044              		.loc 1 422 9
 1045 02c8 B96F     		ldr	r1, [r7, #120]
 1046 02ca 07F15000 		add	r0, r7, #80
 1047 02ce 3B6F     		ldr	r3, [r7, #112]
 1048 02d0 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 27


 1049 02d2 FB6E     		ldr	r3, [r7, #108]
 1050 02d4 0093     		str	r3, [sp]
 1051 02d6 7B6F     		ldr	r3, [r7, #116]
 1052 02d8 1022     		movs	r2, #16
 1053 02da FFF7FEFF 		bl	_PrintUnsigned
 423:Core/Src/SEGGER_RTT_printf.c ****         break;
 1054              		.loc 1 423 9
 1055 02de 3FE0     		b	.L78
 1056              	.L74:
 1057              	.LBB3:
 424:Core/Src/SEGGER_RTT_printf.c ****       case 's':
 425:Core/Src/SEGGER_RTT_printf.c ****         {
 426:Core/Src/SEGGER_RTT_printf.c ****           const char * s = va_arg(*pParamList, const char *);
 1058              		.loc 1 426 24
 1059 02e0 7B68     		ldr	r3, [r7, #4]
 1060 02e2 1B68     		ldr	r3, [r3]
 1061 02e4 191D     		adds	r1, r3, #4
 1062 02e6 7A68     		ldr	r2, [r7, #4]
 1063 02e8 1160     		str	r1, [r2]
 1064 02ea 1B68     		ldr	r3, [r3]
 1065 02ec BB66     		str	r3, [r7, #104]
 427:Core/Src/SEGGER_RTT_printf.c ****           if (s == NULL) {
 1066              		.loc 1 427 14
 1067 02ee BB6E     		ldr	r3, [r7, #104]
 1068 02f0 002B     		cmp	r3, #0
 1069 02f2 01D1     		bne	.L82
 428:Core/Src/SEGGER_RTT_printf.c ****             s = "(NULL)";  // Print (NULL) instead of crashing or breaking, as it is more informati
 1070              		.loc 1 428 15
 1071 02f4 2E4B     		ldr	r3, .L93
 1072 02f6 BB66     		str	r3, [r7, #104]
 1073              	.L82:
 429:Core/Src/SEGGER_RTT_printf.c ****           }
 430:Core/Src/SEGGER_RTT_printf.c ****           do {
 431:Core/Src/SEGGER_RTT_printf.c ****             c = *s;
 1074              		.loc 1 431 15
 1075 02f8 BB6E     		ldr	r3, [r7, #104]
 1076 02fa 1B78     		ldrb	r3, [r3]
 1077 02fc 87F87F30 		strb	r3, [r7, #127]
 432:Core/Src/SEGGER_RTT_printf.c ****             s++;
 1078              		.loc 1 432 14
 1079 0300 BB6E     		ldr	r3, [r7, #104]
 1080 0302 0133     		adds	r3, r3, #1
 1081 0304 BB66     		str	r3, [r7, #104]
 433:Core/Src/SEGGER_RTT_printf.c ****             if (c == '\0') {
 1082              		.loc 1 433 16
 1083 0306 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 1084 030a 002B     		cmp	r3, #0
 1085 030c 0BD0     		beq	.L91
 434:Core/Src/SEGGER_RTT_printf.c ****               break;
 435:Core/Src/SEGGER_RTT_printf.c ****             }
 436:Core/Src/SEGGER_RTT_printf.c ****            _StoreChar(&BufferDesc, c);
 1086              		.loc 1 436 12
 1087 030e 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 1088 0312 07F15003 		add	r3, r7, #80
 1089 0316 1146     		mov	r1, r2
 1090 0318 1846     		mov	r0, r3
 1091 031a FFF7FEFF 		bl	_StoreChar
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 28


 437:Core/Src/SEGGER_RTT_printf.c ****           } while (BufferDesc.ReturnValue >= 0);
 1092              		.loc 1 437 30
 1093 031e FB6D     		ldr	r3, [r7, #92]
 1094              		.loc 1 437 43
 1095 0320 002B     		cmp	r3, #0
 1096 0322 E9DA     		bge	.L82
 1097              	.LBE3:
 438:Core/Src/SEGGER_RTT_printf.c ****         }
 439:Core/Src/SEGGER_RTT_printf.c ****         break;
 1098              		.loc 1 439 9
 1099 0324 1CE0     		b	.L78
 1100              	.L91:
 1101              	.LBB4:
 434:Core/Src/SEGGER_RTT_printf.c ****             }
 1102              		.loc 1 434 15
 1103 0326 00BF     		nop
 1104              	.LBE4:
 1105              		.loc 1 439 9
 1106 0328 1AE0     		b	.L78
 1107              	.L75:
 440:Core/Src/SEGGER_RTT_printf.c ****       case 'p':
 441:Core/Src/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 1108              		.loc 1 441 11
 1109 032a 7B68     		ldr	r3, [r7, #4]
 1110 032c 1B68     		ldr	r3, [r3]
 1111 032e 191D     		adds	r1, r3, #4
 1112 0330 7A68     		ldr	r2, [r7, #4]
 1113 0332 1160     		str	r1, [r2]
 1114 0334 1B68     		ldr	r3, [r3]
 1115 0336 BB67     		str	r3, [r7, #120]
 442:Core/Src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1116              		.loc 1 442 9
 1117 0338 B96F     		ldr	r1, [r7, #120]
 1118 033a 07F15000 		add	r0, r7, #80
 1119 033e 0023     		movs	r3, #0
 1120 0340 0193     		str	r3, [sp, #4]
 1121 0342 0823     		movs	r3, #8
 1122 0344 0093     		str	r3, [sp]
 1123 0346 0823     		movs	r3, #8
 1124 0348 1022     		movs	r2, #16
 1125 034a FFF7FEFF 		bl	_PrintUnsigned
 443:Core/Src/SEGGER_RTT_printf.c ****         break;
 1126              		.loc 1 443 9
 1127 034e 07E0     		b	.L78
 1128              	.L69:
 444:Core/Src/SEGGER_RTT_printf.c ****       case '%':
 445:Core/Src/SEGGER_RTT_printf.c ****         _StoreChar(&BufferDesc, '%');
 1129              		.loc 1 445 9
 1130 0350 07F15003 		add	r3, r7, #80
 1131 0354 2521     		movs	r1, #37
 1132 0356 1846     		mov	r0, r3
 1133 0358 FFF7FEFF 		bl	_StoreChar
 446:Core/Src/SEGGER_RTT_printf.c ****         break;
 1134              		.loc 1 446 9
 1135 035c 00E0     		b	.L78
 1136              	.L90:
 447:Core/Src/SEGGER_RTT_printf.c ****       default:
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 29


 448:Core/Src/SEGGER_RTT_printf.c ****         break;
 1137              		.loc 1 448 9
 1138 035e 00BF     		nop
 1139              	.L78:
 449:Core/Src/SEGGER_RTT_printf.c ****       }
 450:Core/Src/SEGGER_RTT_printf.c ****       sFormat++;
 1140              		.loc 1 450 14
 1141 0360 BB68     		ldr	r3, [r7, #8]
 1142 0362 0133     		adds	r3, r3, #1
 1143 0364 BB60     		str	r3, [r7, #8]
 1144 0366 07E0     		b	.L83
 1145              	.L53:
 451:Core/Src/SEGGER_RTT_printf.c ****     } else {
 452:Core/Src/SEGGER_RTT_printf.c ****       _StoreChar(&BufferDesc, c);
 1146              		.loc 1 452 7
 1147 0368 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 1148 036c 07F15003 		add	r3, r7, #80
 1149 0370 1146     		mov	r1, r2
 1150 0372 1846     		mov	r0, r3
 1151 0374 FFF7FEFF 		bl	_StoreChar
 1152              	.L83:
 453:Core/Src/SEGGER_RTT_printf.c ****     }
 454:Core/Src/SEGGER_RTT_printf.c ****   } while (BufferDesc.ReturnValue >= 0);
 1153              		.loc 1 454 22
 1154 0378 FB6D     		ldr	r3, [r7, #92]
 1155              		.loc 1 454 35
 1156 037a 002B     		cmp	r3, #0
 1157 037c BFF651AE 		bge	.L84
 1158 0380 00E0     		b	.L52
 1159              	.L89:
 341:Core/Src/SEGGER_RTT_printf.c ****     }
 1160              		.loc 1 341 7
 1161 0382 00BF     		nop
 1162              	.L52:
 455:Core/Src/SEGGER_RTT_printf.c **** 
 456:Core/Src/SEGGER_RTT_printf.c ****   if (BufferDesc.ReturnValue > 0) {
 1163              		.loc 1 456 17
 1164 0384 FB6D     		ldr	r3, [r7, #92]
 1165              		.loc 1 456 6
 1166 0386 002B     		cmp	r3, #0
 1167 0388 0DDD     		ble	.L85
 457:Core/Src/SEGGER_RTT_printf.c ****     //
 458:Core/Src/SEGGER_RTT_printf.c ****     // Write remaining data, if any
 459:Core/Src/SEGGER_RTT_printf.c ****     //
 460:Core/Src/SEGGER_RTT_printf.c ****     if (BufferDesc.Cnt != 0u) {
 1168              		.loc 1 460 19
 1169 038a BB6D     		ldr	r3, [r7, #88]
 1170              		.loc 1 460 8
 1171 038c 002B     		cmp	r3, #0
 1172 038e 06D0     		beq	.L86
 461:Core/Src/SEGGER_RTT_printf.c ****       SEGGER_RTT_Write(BufferIndex, acBuffer, BufferDesc.Cnt);
 1173              		.loc 1 461 7
 1174 0390 BA6D     		ldr	r2, [r7, #88]
 1175 0392 07F11003 		add	r3, r7, #16
 1176 0396 1946     		mov	r1, r3
 1177 0398 F868     		ldr	r0, [r7, #12]
 1178 039a FFF7FEFF 		bl	SEGGER_RTT_Write
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 30


 1179              	.L86:
 462:Core/Src/SEGGER_RTT_printf.c ****     }
 463:Core/Src/SEGGER_RTT_printf.c ****     BufferDesc.ReturnValue += (int)BufferDesc.Cnt;
 1180              		.loc 1 463 15
 1181 039e FB6D     		ldr	r3, [r7, #92]
 1182              		.loc 1 463 46
 1183 03a0 BA6D     		ldr	r2, [r7, #88]
 1184              		.loc 1 463 28
 1185 03a2 1344     		add	r3, r3, r2
 1186 03a4 FB65     		str	r3, [r7, #92]
 1187              	.L85:
 464:Core/Src/SEGGER_RTT_printf.c ****   }
 465:Core/Src/SEGGER_RTT_printf.c ****   return BufferDesc.ReturnValue;
 1188              		.loc 1 465 20
 1189 03a6 FB6D     		ldr	r3, [r7, #92]
 466:Core/Src/SEGGER_RTT_printf.c **** }
 1190              		.loc 1 466 1
 1191 03a8 1846     		mov	r0, r3
 1192 03aa 8037     		adds	r7, r7, #128
 1193              	.LCFI18:
 1194              		.cfi_def_cfa_offset 8
 1195 03ac BD46     		mov	sp, r7
 1196              	.LCFI19:
 1197              		.cfi_def_cfa_register 13
 1198              		@ sp needed
 1199 03ae 80BD     		pop	{r7, pc}
 1200              	.L94:
 1201              		.align	2
 1202              	.L93:
 1203 03b0 00000000 		.word	.LC0
 1204              		.cfi_endproc
 1205              	.LFE3:
 1207              		.section	.text.SEGGER_RTT_printf,"ax",%progbits
 1208              		.align	1
 1209              		.global	SEGGER_RTT_printf
 1210              		.syntax unified
 1211              		.thumb
 1212              		.thumb_func
 1214              	SEGGER_RTT_printf:
 1215              	.LFB4:
 467:Core/Src/SEGGER_RTT_printf.c **** 
 468:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
 469:Core/Src/SEGGER_RTT_printf.c **** *
 470:Core/Src/SEGGER_RTT_printf.c **** *       SEGGER_RTT_printf
 471:Core/Src/SEGGER_RTT_printf.c **** *
 472:Core/Src/SEGGER_RTT_printf.c **** *  Function description
 473:Core/Src/SEGGER_RTT_printf.c **** *    Stores a formatted string in SEGGER RTT control block.
 474:Core/Src/SEGGER_RTT_printf.c **** *    This data is read by the host.
 475:Core/Src/SEGGER_RTT_printf.c **** *
 476:Core/Src/SEGGER_RTT_printf.c **** *  Parameters
 477:Core/Src/SEGGER_RTT_printf.c **** *    BufferIndex  Index of "Up"-buffer to be used. (e.g. 0 for "Terminal")
 478:Core/Src/SEGGER_RTT_printf.c **** *    sFormat      Pointer to format string, followed by the arguments for conversion
 479:Core/Src/SEGGER_RTT_printf.c **** *
 480:Core/Src/SEGGER_RTT_printf.c **** *  Return values
 481:Core/Src/SEGGER_RTT_printf.c **** *    >= 0:  Number of bytes which have been stored in the "Up"-buffer.
 482:Core/Src/SEGGER_RTT_printf.c **** *     < 0:  Error
 483:Core/Src/SEGGER_RTT_printf.c **** *
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 31


 484:Core/Src/SEGGER_RTT_printf.c **** *  Notes
 485:Core/Src/SEGGER_RTT_printf.c **** *    (1) Conversion specifications have following syntax:
 486:Core/Src/SEGGER_RTT_printf.c **** *          %[flags][FieldWidth][.Precision]ConversionSpecifier
 487:Core/Src/SEGGER_RTT_printf.c **** *    (2) Supported flags:
 488:Core/Src/SEGGER_RTT_printf.c **** *          -: Left justify within the field width
 489:Core/Src/SEGGER_RTT_printf.c **** *          +: Always print sign extension for signed conversions
 490:Core/Src/SEGGER_RTT_printf.c **** *          0: Pad with 0 instead of spaces. Ignored when using '-'-flag or precision
 491:Core/Src/SEGGER_RTT_printf.c **** *        Supported conversion specifiers:
 492:Core/Src/SEGGER_RTT_printf.c **** *          c: Print the argument as one char
 493:Core/Src/SEGGER_RTT_printf.c **** *          d: Print the argument as a signed integer
 494:Core/Src/SEGGER_RTT_printf.c **** *          u: Print the argument as an unsigned integer
 495:Core/Src/SEGGER_RTT_printf.c **** *          x: Print the argument as an hexadecimal integer
 496:Core/Src/SEGGER_RTT_printf.c **** *          s: Print the string pointed to by the argument
 497:Core/Src/SEGGER_RTT_printf.c **** *          p: Print the argument as an 8-digit hexadecimal integer. (Argument shall be a pointer to
 498:Core/Src/SEGGER_RTT_printf.c **** */
 499:Core/Src/SEGGER_RTT_printf.c **** int SEGGER_RTT_printf(unsigned BufferIndex, const char * sFormat, ...) {
 1216              		.loc 1 499 72
 1217              		.cfi_startproc
 1218              		@ args = 4, pretend = 12, frame = 16
 1219              		@ frame_needed = 1, uses_anonymous_args = 1
 1220 0000 0EB4     		push	{r1, r2, r3}
 1221              	.LCFI20:
 1222              		.cfi_def_cfa_offset 12
 1223              		.cfi_offset 1, -12
 1224              		.cfi_offset 2, -8
 1225              		.cfi_offset 3, -4
 1226 0002 80B5     		push	{r7, lr}
 1227              	.LCFI21:
 1228              		.cfi_def_cfa_offset 20
 1229              		.cfi_offset 7, -20
 1230              		.cfi_offset 14, -16
 1231 0004 85B0     		sub	sp, sp, #20
 1232              	.LCFI22:
 1233              		.cfi_def_cfa_offset 40
 1234 0006 00AF     		add	r7, sp, #0
 1235              	.LCFI23:
 1236              		.cfi_def_cfa_register 7
 1237 0008 7860     		str	r0, [r7, #4]
 500:Core/Src/SEGGER_RTT_printf.c ****   int r;
 501:Core/Src/SEGGER_RTT_printf.c ****   va_list ParamList;
 502:Core/Src/SEGGER_RTT_printf.c **** 
 503:Core/Src/SEGGER_RTT_printf.c ****   va_start(ParamList, sFormat);
 1238              		.loc 1 503 3
 1239 000a 07F12003 		add	r3, r7, #32
 1240 000e BB60     		str	r3, [r7, #8]
 504:Core/Src/SEGGER_RTT_printf.c ****   r = SEGGER_RTT_vprintf(BufferIndex, sFormat, &ParamList);
 1241              		.loc 1 504 7
 1242 0010 07F10803 		add	r3, r7, #8
 1243 0014 1A46     		mov	r2, r3
 1244 0016 F969     		ldr	r1, [r7, #28]
 1245 0018 7868     		ldr	r0, [r7, #4]
 1246 001a FFF7FEFF 		bl	SEGGER_RTT_vprintf
 1247 001e F860     		str	r0, [r7, #12]
 505:Core/Src/SEGGER_RTT_printf.c ****   va_end(ParamList);
 506:Core/Src/SEGGER_RTT_printf.c ****   return r;
 1248              		.loc 1 506 10
 1249 0020 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 32


 507:Core/Src/SEGGER_RTT_printf.c **** }
 1250              		.loc 1 507 1
 1251 0022 1846     		mov	r0, r3
 1252 0024 1437     		adds	r7, r7, #20
 1253              	.LCFI24:
 1254              		.cfi_def_cfa_offset 20
 1255 0026 BD46     		mov	sp, r7
 1256              	.LCFI25:
 1257              		.cfi_def_cfa_register 13
 1258              		@ sp needed
 1259 0028 BDE88040 		pop	{r7, lr}
 1260              	.LCFI26:
 1261              		.cfi_restore 14
 1262              		.cfi_restore 7
 1263              		.cfi_def_cfa_offset 12
 1264 002c 03B0     		add	sp, sp, #12
 1265              	.LCFI27:
 1266              		.cfi_restore 3
 1267              		.cfi_restore 2
 1268              		.cfi_restore 1
 1269              		.cfi_def_cfa_offset 0
 1270 002e 7047     		bx	lr
 1271              		.cfi_endproc
 1272              	.LFE4:
 1274              		.section	.rodata._aV2C.0,"a"
 1275              		.align	2
 1278              	_aV2C.0:
 1279 0000 30313233 		.ascii	"0123456789ABCDEF"
 1279      34353637 
 1279      38394142 
 1279      43444546 
 1280              		.text
 1281              	.Letext0:
 1282              		.file 2 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/13.2 Rel1/lib/gcc/arm-none-eabi/13
 1283              		.file 3 "<built-in>"
 1284              		.file 4 "Core/Inc/SEGGER_RTT.h"
ARM GAS  C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s 			page 33


DEFINED SYMBOLS
                            *ABS*:00000000 SEGGER_RTT_printf.c
C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s:21     .text._StoreChar:00000000 $t
C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s:26     .text._StoreChar:00000000 _StoreChar
C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s:135    .text._PrintUnsigned:00000000 $t
C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s:140    .text._PrintUnsigned:00000000 _PrintUnsigned
C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s:395    .text._PrintUnsigned:00000154 $d
C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s:1278   .rodata._aV2C.0:00000000 _aV2C.0
C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s:400    .text._PrintInt:00000000 $t
C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s:405    .text._PrintInt:00000000 _PrintInt
C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s:657    .rodata:00000000 $d
C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s:661    .text.SEGGER_RTT_vprintf:00000000 $t
C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s:667    .text.SEGGER_RTT_vprintf:00000000 SEGGER_RTT_vprintf
C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s:739    .text.SEGGER_RTT_vprintf:00000064 $d
C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s:753    .text.SEGGER_RTT_vprintf:0000009c $t
C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s:937    .text.SEGGER_RTT_vprintf:000001c4 $d
C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s:970    .text.SEGGER_RTT_vprintf:00000248 $t
C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s:1203   .text.SEGGER_RTT_vprintf:000003b0 $d
C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s:1208   .text.SEGGER_RTT_printf:00000000 $t
C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s:1214   .text.SEGGER_RTT_printf:00000000 SEGGER_RTT_printf
C:\Users\Siddhesh\AppData\Local\Temp\ccveuAMP.s:1275   .rodata._aV2C.0:00000000 $d
                           .group:00000000 wm4.0.f079ee757cd02b273648dd4f0fb0fb55
                           .group:00000000 wm4.SEGGER_RTT_Conf.h.59.2e8eb984a219996e2ba347277233bc2d
                           .group:00000000 wm4.SEGGER_RTT.h.147.e9269338dc91c0deb410c789275bb3f3
                           .group:00000000 wm4.ieeefp.h.77.5ad60f72ea25fc152400b550ac118212
                           .group:00000000 wm4._newlib_version.h.4.6d111ab2e95434b664b53815e5c8ccba
                           .group:00000000 wm4.newlib.h.27.d4bf77c18f14f545101dac22f0b54118
                           .group:00000000 wm4.features.h.22.4e5514d51694f64cae235f84d9e565a5
                           .group:00000000 wm4.config.h.224.10ee1ad185d877c6e334e6581faab44d
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.185.882514a1a6169ceba9142f401cbe27c6
                           .group:00000000 wm4.stddef.h.39.794fa375de48dda278c4aebb5c74aa5b
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.cdefs.h.49.70fc7af612f78ddcace70fdd90b5623b
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.158.6f8e08a347b1cff664332fa350bfceb3
                           .group:00000000 wm4._types.h.127.3bdfe3ff8ea2d0985b03d9cbe93480e3
                           .group:00000000 wm4.reent.h.18.25503cdc8b7e55dd0d6ea7b3e5af7a03
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.78.7f0775353a33c852a1479c008f68cd03
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.stdarg.h.31.f7f4f3bfddce9ed034956076d59396f7
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.SEGGER_RTT.h.301.d7fa48155a2ba9362898c9543a662609

UNDEFINED SYMBOLS
SEGGER_RTT_Write
